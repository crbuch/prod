/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/yesterdaysProd.js":
/*!*******************************!*\
  !*** ./src/yesterdaysProd.js ***!
  \*******************************/
/***/ (() => {

eval("let region = document.getElementById(\"region\").textContent;\n\nd3.json(\"../data/allProductionData\"+region+\".json\").then((data) => {\n  tableData = data;\n\n  const yesterdaysDate = tableData[0][1];\n\n  tbody = d3.select(\"tbody\")\n\n  function buildTable(tableData) {\n    tbody.html(\"\"); //clear table\n    var filteredData = tableData.filter(row => row[1] == yesterdaysDate); //FILTER DATA BASED ON MOST RECENT DATE\n    var dataForTable = [];\n    \n    filteredData.forEach(well => {\n      dataForTable.push(Array(well[0], well[2], well[3], well[4], well[5], well[7]))\n    });\n    dataForTable.forEach((well) => {\n      let row = tbody.append(\"tr\");\n      // loop through each value to add a cell for each of it\n      Object.values(well).forEach((val) => {\n        let cell = row.append(\"td\");\n        cell.text(val);\n      });\n    });\n    // DYNAMIC HEADING \n    document.getElementById(\"todaysDate\").innerHTML = \"Production for \" + yesterdaysDate\n  }; \n\n\n  function createDropdownOptions() {\n    var partnerSelector = d3.select(\"#wellFilter\"); //SELECT <select> WHERE PARTNER NAMES WILL APPEAR\n    d3.json(\"../data/allProductionData\"+region+\".json\").then((allData) => { //READ IN JSON FILE COINTAING ALL PARTNER'S NAMES\n      allData.forEach((well) => {\n        if (well[1] === yesterdaysDate) {\n          partnerSelector\n            .append('option')\n            .text(well[0])\n            .property('Value', well)\n        }\n      });\n    });\n  };\n\n  //CALL FUNCTION TO CREATE DROPDOWN MENU VALUES\n  createDropdownOptions();\n\n  function handleClick() {\n    // the value entered in the sitename filter becomes the value for the siteName variable\n    let requestedSiteName = d3.select(\"#wellFilter\").property(\"value\");\n    console.log(requestedSiteName);\n    // set data be filtered to imported data (the data ready to be filtered)\n    let filteredData = tableData;\n    filteredData = filteredData.filter(row => row[0] == requestedSiteName)\n    //build table using the filteredData variable\n    buildTable(filteredData);\n  };\n\n  createDropdownOptions();\n  buildTable(tableData,yesterdaysDate)\n\n  d3.selectAll('#wellFilter').on(\"change\", handleClick);\n});\nasync function sortByRecentProd() {\n  event.preventDefault();\n  let allData = await d3.json('./static/allProductionData'+region+'.json');\n\n  const yesterdaysDate = allData[0][1];\n  const filteredData = allData.filter(row => row[1] == yesterdaysDate);\n\n  filteredData.sort((a, b) => {//sorts data high to low by oil production\n    const aVal = a[2];\n    const bVal = b[2];\n    return bVal - aVal\n  });\n\n\n  buildTable(filteredData,yesterdaysDate)\n};\n\nfunction buildTable(data,yesterdaysDate) {\n  tbody = d3.select(\"tbody\")\n  tbody.html(\"\");\n\n  var dataForTable = [];\n  \n  data.forEach(well => {\n    dataForTable.push(Array(well[0], well[2], well[3], well[4], well[5], well[7]))\n  });\n  dataForTable.forEach((well) => {\n    let row = tbody.append(\"tr\");\n\n    Object.values(well).forEach((val) => {\n      let cell = row.append(\"td\");\n      cell.text(val);\n    });\n  });\n  document.getElementById(\"todaysDate\").innerHTML = \"Production for \" + yesterdaysDate\n};\nd3.select(\"#Prodfilter\").on(\"click\", function () { sortByRecentProd() })\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMveWVzdGVyZGF5c1Byb2QuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBLG9CQUFvQjtBQUNwQiwwRUFBMEU7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7OztBQUdBO0FBQ0Esb0RBQW9EO0FBQ3BELDRFQUE0RTtBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBLG1EQUFtRCxvQkFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMveWVzdGVyZGF5c1Byb2QuanM/M2U4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgcmVnaW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZWdpb25cIikudGV4dENvbnRlbnQ7XG5cbmQzLmpzb24oXCIuLi9kYXRhL2FsbFByb2R1Y3Rpb25EYXRhXCIrcmVnaW9uK1wiLmpzb25cIikudGhlbigoZGF0YSkgPT4ge1xuICB0YWJsZURhdGEgPSBkYXRhO1xuXG4gIGNvbnN0IHllc3RlcmRheXNEYXRlID0gdGFibGVEYXRhWzBdWzFdO1xuXG4gIHRib2R5ID0gZDMuc2VsZWN0KFwidGJvZHlcIilcblxuICBmdW5jdGlvbiBidWlsZFRhYmxlKHRhYmxlRGF0YSkge1xuICAgIHRib2R5Lmh0bWwoXCJcIik7IC8vY2xlYXIgdGFibGVcbiAgICB2YXIgZmlsdGVyZWREYXRhID0gdGFibGVEYXRhLmZpbHRlcihyb3cgPT4gcm93WzFdID09IHllc3RlcmRheXNEYXRlKTsgLy9GSUxURVIgREFUQSBCQVNFRCBPTiBNT1NUIFJFQ0VOVCBEQVRFXG4gICAgdmFyIGRhdGFGb3JUYWJsZSA9IFtdO1xuICAgIFxuICAgIGZpbHRlcmVkRGF0YS5mb3JFYWNoKHdlbGwgPT4ge1xuICAgICAgZGF0YUZvclRhYmxlLnB1c2goQXJyYXkod2VsbFswXSwgd2VsbFsyXSwgd2VsbFszXSwgd2VsbFs0XSwgd2VsbFs1XSwgd2VsbFs3XSkpXG4gICAgfSk7XG4gICAgZGF0YUZvclRhYmxlLmZvckVhY2goKHdlbGwpID0+IHtcbiAgICAgIGxldCByb3cgPSB0Ym9keS5hcHBlbmQoXCJ0clwiKTtcbiAgICAgIC8vIGxvb3AgdGhyb3VnaCBlYWNoIHZhbHVlIHRvIGFkZCBhIGNlbGwgZm9yIGVhY2ggb2YgaXRcbiAgICAgIE9iamVjdC52YWx1ZXMod2VsbCkuZm9yRWFjaCgodmFsKSA9PiB7XG4gICAgICAgIGxldCBjZWxsID0gcm93LmFwcGVuZChcInRkXCIpO1xuICAgICAgICBjZWxsLnRleHQodmFsKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIC8vIERZTkFNSUMgSEVBRElORyBcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRvZGF5c0RhdGVcIikuaW5uZXJIVE1MID0gXCJQcm9kdWN0aW9uIGZvciBcIiArIHllc3RlcmRheXNEYXRlXG4gIH07IFxuXG5cbiAgZnVuY3Rpb24gY3JlYXRlRHJvcGRvd25PcHRpb25zKCkge1xuICAgIHZhciBwYXJ0bmVyU2VsZWN0b3IgPSBkMy5zZWxlY3QoXCIjd2VsbEZpbHRlclwiKTsgLy9TRUxFQ1QgPHNlbGVjdD4gV0hFUkUgUEFSVE5FUiBOQU1FUyBXSUxMIEFQUEVBUlxuICAgIGQzLmpzb24oXCIuLi9kYXRhL2FsbFByb2R1Y3Rpb25EYXRhXCIrcmVnaW9uK1wiLmpzb25cIikudGhlbigoYWxsRGF0YSkgPT4geyAvL1JFQUQgSU4gSlNPTiBGSUxFIENPSU5UQUlORyBBTEwgUEFSVE5FUidTIE5BTUVTXG4gICAgICBhbGxEYXRhLmZvckVhY2goKHdlbGwpID0+IHtcbiAgICAgICAgaWYgKHdlbGxbMV0gPT09IHllc3RlcmRheXNEYXRlKSB7XG4gICAgICAgICAgcGFydG5lclNlbGVjdG9yXG4gICAgICAgICAgICAuYXBwZW5kKCdvcHRpb24nKVxuICAgICAgICAgICAgLnRleHQod2VsbFswXSlcbiAgICAgICAgICAgIC5wcm9wZXJ0eSgnVmFsdWUnLCB3ZWxsKVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICAvL0NBTEwgRlVOQ1RJT04gVE8gQ1JFQVRFIERST1BET1dOIE1FTlUgVkFMVUVTXG4gIGNyZWF0ZURyb3Bkb3duT3B0aW9ucygpO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZUNsaWNrKCkge1xuICAgIC8vIHRoZSB2YWx1ZSBlbnRlcmVkIGluIHRoZSBzaXRlbmFtZSBmaWx0ZXIgYmVjb21lcyB0aGUgdmFsdWUgZm9yIHRoZSBzaXRlTmFtZSB2YXJpYWJsZVxuICAgIGxldCByZXF1ZXN0ZWRTaXRlTmFtZSA9IGQzLnNlbGVjdChcIiN3ZWxsRmlsdGVyXCIpLnByb3BlcnR5KFwidmFsdWVcIik7XG4gICAgY29uc29sZS5sb2cocmVxdWVzdGVkU2l0ZU5hbWUpO1xuICAgIC8vIHNldCBkYXRhIGJlIGZpbHRlcmVkIHRvIGltcG9ydGVkIGRhdGEgKHRoZSBkYXRhIHJlYWR5IHRvIGJlIGZpbHRlcmVkKVxuICAgIGxldCBmaWx0ZXJlZERhdGEgPSB0YWJsZURhdGE7XG4gICAgZmlsdGVyZWREYXRhID0gZmlsdGVyZWREYXRhLmZpbHRlcihyb3cgPT4gcm93WzBdID09IHJlcXVlc3RlZFNpdGVOYW1lKVxuICAgIC8vYnVpbGQgdGFibGUgdXNpbmcgdGhlIGZpbHRlcmVkRGF0YSB2YXJpYWJsZVxuICAgIGJ1aWxkVGFibGUoZmlsdGVyZWREYXRhKTtcbiAgfTtcblxuICBjcmVhdGVEcm9wZG93bk9wdGlvbnMoKTtcbiAgYnVpbGRUYWJsZSh0YWJsZURhdGEseWVzdGVyZGF5c0RhdGUpXG5cbiAgZDMuc2VsZWN0QWxsKCcjd2VsbEZpbHRlcicpLm9uKFwiY2hhbmdlXCIsIGhhbmRsZUNsaWNrKTtcbn0pO1xuYXN5bmMgZnVuY3Rpb24gc29ydEJ5UmVjZW50UHJvZCgpIHtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgbGV0IGFsbERhdGEgPSBhd2FpdCBkMy5qc29uKCcuL3N0YXRpYy9hbGxQcm9kdWN0aW9uRGF0YScrcmVnaW9uKycuanNvbicpO1xuXG4gIGNvbnN0IHllc3RlcmRheXNEYXRlID0gYWxsRGF0YVswXVsxXTtcbiAgY29uc3QgZmlsdGVyZWREYXRhID0gYWxsRGF0YS5maWx0ZXIocm93ID0+IHJvd1sxXSA9PSB5ZXN0ZXJkYXlzRGF0ZSk7XG5cbiAgZmlsdGVyZWREYXRhLnNvcnQoKGEsIGIpID0+IHsvL3NvcnRzIGRhdGEgaGlnaCB0byBsb3cgYnkgb2lsIHByb2R1Y3Rpb25cbiAgICBjb25zdCBhVmFsID0gYVsyXTtcbiAgICBjb25zdCBiVmFsID0gYlsyXTtcbiAgICByZXR1cm4gYlZhbCAtIGFWYWxcbiAgfSk7XG5cblxuICBidWlsZFRhYmxlKGZpbHRlcmVkRGF0YSx5ZXN0ZXJkYXlzRGF0ZSlcbn07XG5cbmZ1bmN0aW9uIGJ1aWxkVGFibGUoZGF0YSx5ZXN0ZXJkYXlzRGF0ZSkge1xuICB0Ym9keSA9IGQzLnNlbGVjdChcInRib2R5XCIpXG4gIHRib2R5Lmh0bWwoXCJcIik7XG5cbiAgdmFyIGRhdGFGb3JUYWJsZSA9IFtdO1xuICBcbiAgZGF0YS5mb3JFYWNoKHdlbGwgPT4ge1xuICAgIGRhdGFGb3JUYWJsZS5wdXNoKEFycmF5KHdlbGxbMF0sIHdlbGxbMl0sIHdlbGxbM10sIHdlbGxbNF0sIHdlbGxbNV0sIHdlbGxbN10pKVxuICB9KTtcbiAgZGF0YUZvclRhYmxlLmZvckVhY2goKHdlbGwpID0+IHtcbiAgICBsZXQgcm93ID0gdGJvZHkuYXBwZW5kKFwidHJcIik7XG5cbiAgICBPYmplY3QudmFsdWVzKHdlbGwpLmZvckVhY2goKHZhbCkgPT4ge1xuICAgICAgbGV0IGNlbGwgPSByb3cuYXBwZW5kKFwidGRcIik7XG4gICAgICBjZWxsLnRleHQodmFsKTtcbiAgICB9KTtcbiAgfSk7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidG9kYXlzRGF0ZVwiKS5pbm5lckhUTUwgPSBcIlByb2R1Y3Rpb24gZm9yIFwiICsgeWVzdGVyZGF5c0RhdGVcbn07XG5kMy5zZWxlY3QoXCIjUHJvZGZpbHRlclwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHsgc29ydEJ5UmVjZW50UHJvZCgpIH0pXG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/yesterdaysProd.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/yesterdaysProd.js"]();
/******/ 	
/******/ })()
;