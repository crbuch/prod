/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/curves.js":
/*!**************************!*\
  !*** ./src/js/curves.js ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data */ \"./src/js/data.js\");\n/* harmony import */ var _region__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./region */ \"./src/js/region.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./src/js/index.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ \"./node_modules/d3/src/index.js\");\n/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./layout */ \"./src/js/layout.js\");\n/* harmony import */ var _ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ui */ \"./src/js/ui.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_data__WEBPACK_IMPORTED_MODULE_4__]);\n_data__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n(0,_index__WEBPACK_IMPORTED_MODULE_1__.monitorAuthState)();\r\n(0,_region__WEBPACK_IMPORTED_MODULE_2__.monitorRegion)();\r\n\r\nconst displayEconomics = (data, selectedOption) => {\r\n  let wellRMPL = 0;\r\n  let wellYTDPL = 0;\r\n  let monthPnL = \"\";\r\n\r\n  data.forEach((ecoWell) => {\r\n    if (ecoWell[\"Well Name\"].includes(selectedOption)) {\r\n      wellRMPL = ecoWell[\"Recent Month P&L\"];\r\n      wellYTDPL = ecoWell[\"YTD P&L\"];\r\n      monthPnL = ecoWell[\"Date\"].slice(0, 3);\r\n    }\r\n  });\r\n  document.getElementById(\"pnl\").innerHTML = `P&L : $${wellRMPL.toFixed(0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} ${monthPnL}`;\r\n  document.getElementById(\"YTD\").innerHTML = `$${wellYTDPL.toFixed(0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} YTD`;\r\n};\r\n\r\nconst displayPayout = (data, selectedOption) => {\r\n  var payout100 = 0;\r\n  data.forEach((payoutWell) => {\r\n    if (payoutWell[\"Well Name\"].includes(selectedOption)) {\r\n      payout100 = payoutWell[\"% Payout\"] * 100;\r\n    }\r\n  });\r\n  document.getElementById(\"payout\").innerHTML =\r\n    \"Payout : \" + payout100.toFixed(0).toLocaleString(\"en-US\") + \"%\";\r\n  //document.getElementById(\"payout100\").innerHTML = payout100.toFixed(0).toLocaleString(\"en-US\")+ \"%\";\r\n\r\n};\r\n\r\nconst displayPumpInfo = (data, selectedOption) => {\r\n  let wellInfo = data.find(i => i[\"Well Name\"] === selectedOption);\r\n  if (wellInfo !== undefined) {\r\n    if (\r\n      wellInfo[\"SPM\"] !== 0\r\n    ) {\r\n      //USED jQuery LIBRARY TO TOGGLE THE DISPLAY OF #pumpInfo\r\n      $(document).ready(function () {\r\n        $(\"#pumpInfo\").toggle();\r\n        document.getElementById(\"c\").innerHTML = `C: ${wellInfo[\"C\"]}`;\r\n        document.getElementById(\"SPM\").innerHTML = `SPM: ${wellInfo[\"SPM\"]}`;\r\n        document.getElementById(\"DHSL\").innerHTML = `DH SL: ${wellInfo[\"DH SL\"]}`;\r\n        document.getElementById(\"ideal\").innerHTML = `Ideal bfpd: ${wellInfo[\"Ideal bfpd\"]}`;\r\n        document.getElementById(\"pumpEff\").innerHTML = `Pump Eff: ${wellInfo[\"Pump Eff\"] * 100}`;\r\n        document.getElementById(\"pumpDepth\").innerHTML = `Pump Depth: ${wellInfo[\"Pump Depth\"]}`;\r\n        document.getElementById(\"GFLAP\").innerHTML = `GFLAP: ${wellInfo[\"GFLAP\"]}`;\r\n        document.getElementById(\"Inc\").innerHTML = `Inc: ${wellInfo[\"Inc\"]}`;\r\n      });\r\n    } else {\r\n      $(document).ready(function () {\r\n        $(\"#notPumpingInfo\").toggle();\r\n        $(\"#notPumping\").html(\"This well is not pumping\");\r\n      });\r\n    }\r\n  } else {\r\n    $(document).ready(function () {\r\n      $(\"#notPumpingInfo\").toggle();\r\n      $(\"#notPumping\").html(\"No pump data available\");\r\n    });\r\n  };\r\n};\r\n\r\nconst displayCumlData = (data, selectedOption) => {\r\n  let selectedWell = {\r\n    cuml: 0,\r\n    gasCuml: 0,\r\n    waterCuml: 0,\r\n    formation: \"\"\r\n  };\r\n\r\n  data.forEach(well => {\r\n    if (selectedOption === well[0]) {\r\n      selectedWell.cuml = well[1];\r\n      selectedWell.gasCuml = well[3];\r\n      selectedWell.waterCuml = well[2];\r\n      selectedWell.formation = well[4];\r\n    }\r\n  });\r\n\r\n  const formationEl = document.getElementById(\"formation\");\r\n  const cumulativeDataEl = document.getElementById(\"cumlativeData\");\r\n\r\n  if (!selectedWell.formation) {\r\n    document.getElementById(\"filler4\").style.display = \"\";\r\n  }\r\n\r\n  formationEl.innerHTML = selectedWell.formation;\r\n  cumulativeDataEl.innerHTML = `Cumulative: ${selectedWell.cuml} MBO, ${selectedWell.gasCuml} MMCF, ${selectedWell.waterCuml} MBW`;\r\n\r\n};\r\n\r\nconst getSelectedOption = (data) => {\r\n  let selectedOption = null;\r\n  let menuNode = (0,d3__WEBPACK_IMPORTED_MODULE_0__.select)(\"#siteSelection\").node().value;\r\n\r\n  if (menuNode != \"default\") {\r\n    selectedOption = [menuNode];\r\n  } else if (sessionStorage.getItem(\"siteSelection\") != null) {\r\n    selectedOption = [sessionStorage.getItem(\"siteSelection\")];\r\n    sessionStorage.removeItem(\"siteSelection\");\r\n  } else selectedOption = [...data[0][0]];\r\n\r\n  return selectedOption.join('');\r\n};\r\n\r\nconst curve = (timeFrame, data) => {\r\n  const selectedOption = getSelectedOption(data.prodData);\r\n\r\n  let region = sessionStorage.getItem(\"region\");\r\n  if (region == null) {\r\n    sessionStorage.setItem('region', 'st')\r\n    region = 'st'\r\n  };\r\n\r\n  if (region != \"et\") {\r\n    displayEconomics(data.economicsData, selectedOption);\r\n    displayPayout(data.payoutData, selectedOption);\r\n    displayPumpInfo(data.pumpData, selectedOption);\r\n\r\n    // Hide previous pumping info\r\n    document.getElementById(\"pumpInfo\").style.display = \"none\";\r\n    document.getElementById(\"notPumpingInfo\").style.display = \"none\";\r\n\r\n    // Clear pump info text for next selection\r\n    [\"c\", \"SPM\", \"DHSL\", \"ideal\", \"pumpEff\", \"pumpDepth\", \"GFLAP\", \"Inc\", \"notPumping\"].forEach(id => {\r\n      document.getElementById(id).innerHTML = \"\";\r\n    });\r\n  };\r\n  displayCumlData(data.dataCuml, selectedOption);\r\n\r\n  document.getElementById(\"zoomEl\").style.visibility = \"hidden\"; //dont display old zoom data if switching b/t wells/timeframes\r\n  document.getElementById(\"wellName\").innerHTML = selectedOption;\r\n  document.getElementById(\"individualTable\").style.display = \"none\";\r\n\r\n  ['oilDeclineCurve', 'gasDeclineCurve', 'waterDeclineCurve', 'waterCutCurve', 'totalFluidCurve', 'combinationCurves', 'cumlOilCurve'].forEach(id => {\r\n    document.getElementById(id).style.display = 'block';\r\n  });\r\n  const site_data = data.prodData.filter(site => site[0] === selectedOption);\r\n  let site_date = site_data.map(site => site[9]);\r\n  let site_oil = site_data.map(site => site[2]);\r\n  let site_gas = site_data.map(site => site[3]);\r\n  let site_water = site_data.map(site => site[4]);\r\n  let comments = site_data.map(site => site[7]);\r\n  let movingAverage = site_data.map(site => site[8]);\r\n  let water_cut = site_water.map((water, i) => (water / (water + site_oil[i])) * 100);\r\n  let total_fluid = site_oil.map((oil, index) => oil + site_water[index]);\r\n  if (timeFrame > 0) [site_date, site_oil, site_gas, site_water, comments, movingAverage] =\r\n  [site_date, site_oil, site_gas, site_water, comments, movingAverage].map(arr => arr.slice(0, timeFrame));\r\n\r\n  // READING MONTHLY DATA\r\n  const mo_site_data = data.moProdDataST.filter(site => site[0] === selectedOption);\r\n  let site_date_mo = mo_site_data.map(site => site[6]);\r\n  let site_oil_mo = mo_site_data.map(site => site[1]);\r\n\r\n  const cumlMoOil = site_oil_mo.reduce((acc, val, idx) => (idx === 0 ? acc.concat(val) : acc.concat(val + acc[idx - 1])), []);\r\n  \r\n\r\n  // CREATE TRACES FOR GRAPHING\r\n  let traceOil = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)( \r\n    site_date,\r\n    site_oil,\r\n    \"Oil [MBO]\",\r\n    null,\r\n    \"green\",\r\n    null,\r\n    comments\r\n  );\r\n\r\n  const traceOilAvg = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(\r\n    site_date,\r\n    movingAverage,\r\n    \"7 Day Avg\",\r\n    \"line\",\r\n    null,\r\n    \"dot\"\r\n  );\r\n\r\n  let traceGas = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(\r\n    site_date,\r\n    site_gas,\r\n    \"Gas [MCF]\",\r\n    \"line\",\r\n    \"red\");\r\n\r\n  let traceWater = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(\r\n    site_date,\r\n    site_water,\r\n    \"Water [MBW]\",\r\n    \"line\",\r\n    \"blue\",\r\n  );\r\n\r\n  const traceCut = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(\r\n    site_date,\r\n    water_cut,\r\n    // \"Water [Mbw]\",\r\n    \"line\",\r\n    \"#25C4DC\"\r\n  );\r\n\r\n  let traceFluid = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(\r\n    site_date,\r\n    total_fluid,\r\n    \"Total Fluid [MB]\",\r\n    \"line\",\r\n    \"black\"\r\n  );\r\n\r\n  const traceCumlOil = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(\r\n    site_date_mo,\r\n    cumlMoOil,\r\n    \"Oil [MBO]\",\r\n    \"line\",\r\n    \"green\"\r\n  );\r\n\r\n  // const layoutCut = makeLayout(\"Water Cut Percentage\");\r\n  const scale = (document.getElementById(\"logarithmic\").classList.contains(\"active\")) ? 'log' : 'linear';\r\n  const plotContainers = [\"oilDeclineCurve\", \"gasDeclineCurve\", \"waterDeclineCurve\", 'totalFluidCurve', 'waterCutCurve', 'combinationCurves', 'cumlOilCurve'];\r\n  const combination = [traceGas, traceOil, traceWater, traceFluid];\r\n\r\n  let traceArrays = [\r\n    [traceOil, traceOilAvg],\r\n    [traceGas],\r\n    [traceWater],\r\n    [traceFluid],\r\n    [traceCut],\r\n    combination,\r\n    [traceCumlOil]\r\n  ];\r\n\r\n  plotContainers.forEach((container, i) => {\r\n    traceArrays[i].forEach(trace => {\r\n      trace.visible = (i === 5 && trace.name !== \"Oil [MBO]\") ? \"legendonly\" : trace.visible;\r\n    });\r\n    const layout = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeLayout)(['Oil vs Time (BOPD)', 'Gas vs Time (MCFD)', 'Water vs Time (BWPD)', 'Total Fluid vs Time (BFPD)', 'Water Cut Percentage', 'Combined Production', 'Cumulative Oil vs Time'][i], scale, \r\n    (scale === 'log') ? [1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, 2000, 3000] : null);\r\n    Plotly.newPlot(container, traceArrays[i], layout, _layout__WEBPACK_IMPORTED_MODULE_3__.config);\r\n  });\r\n\r\n  const combo = document.getElementById('combinationCurves');\r\n  combo.on(\"plotly_relayout\", function (eventData) {\r\n    JSON.stringify(eventData);\r\n    const zoomEL = document.getElementById(\"zoomEl\");\r\n    zoomEL.innerHTML = '';\r\n    const p = document.createElement('p');\r\n    p.textContent = `Produced:`;\r\n    zoomEL.appendChild(p);\r\n\r\n    let { \"xaxis.range[0]\": xRangeStart, \"xaxis.range[1]\": xRangeEnd } = eventData;\r\n    if (!xRangeStart) { // if double-clicked\r\n      xRangeStart = site_date[site_date.length - 1];\r\n      xRangeEnd = site_date[0];\r\n    }\r\n    const xStart = xRangeStart.substring(0, 10);\r\n    const xEnd = xRangeEnd.substring(0, 10);\r\n\r\n    const startIdx = site_date.indexOf(`${xStart}T00:00:00.000Z`);\r\n    const endIdx = site_date.indexOf(`${xEnd}T00:00:00.000Z`);\r\n\r\n    if (startIdx === -1) { // zoomed where no data\r\n      return;\r\n    }\r\n    const visible_traces = JSON.parse(sessionStorage.getItem('visible_traces'));\r\n    const map = {'Gas [MCF]': site_gas, 'Oil [MBO]': site_oil, 'Water [MBW]': site_water, 'Total Fluid [MB]': total_fluid };\r\n\r\n    for (const[key,vals] of Object.entries(visible_traces)){\r\n      for (let val of vals){\r\n        const data = map[val];\r\n        const sum = (data.slice(endIdx, startIdx + 1).reduce((acc, cur) => acc + cur, 0)/1000).toFixed(1);\r\n\r\n        let chop = -5;\r\n        if (val == 'Total Fluid [MB]') chop = -4; \r\n        const unit = val.slice(chop);\r\n        let name = val.slice(0, chop);\r\n        if (val == 'Total Fluid [MB]') name = `${name} `; \r\n\r\n        const p = document.createElement('p');\r\n        p.textContent = `${name}: ${sum} ${unit}`;\r\n        p.style.fontSize = '15px';\r\n        zoomEL.appendChild(p);\r\n      }\r\n    }\r\n    zoomEL.style.visibility = \"visible\";\r\n  });\r\n\r\n  combo.on('plotly_legendclick', function(data) {\r\n    const traceIdx = data.curveNumber;\r\n    const name = combination[traceIdx].name;\r\n    let currVisible = JSON.parse(sessionStorage.visible_traces) || {\"visible_traces\": []};\r\n\r\n    if (currVisible.visible.includes(name)){\r\n      currVisible.visible = currVisible.visible.filter(el => el !== name)\r\n    }else{\r\n      currVisible.visible.push(name);\r\n    }\r\n\r\n    sessionStorage.setItem('visible_traces', JSON.stringify(currVisible));\r\n  })\r\n\r\n  document.getElementById(\"siteSelection\").focus();\r\n  document.getElementById(\"filler4\").style.display = \"none\";\r\n};\r\n\r\nconst table = (coreData) => {\r\n  const data = coreData.map(el => ([...el]))\r\n  const selectedOption = getSelectedOption(data);\r\n  const well = data.filter(i => i[0] == selectedOption);\r\n\r\n  well.forEach(w => {\r\n    w.shift();\r\n    for (let i = 0; i < 2; i++) w.pop();\r\n  });\r\n  _data__WEBPACK_IMPORTED_MODULE_4__.buildTable(well);\r\n\r\n  document.getElementById('individualTable').style.display = 'inline-block';\r\n  ['oilDeclineCurve', 'gasDeclineCurve', 'waterDeclineCurve', 'waterCutCurve', 'totalFluidCurve', 'combinationCurves', 'cumOilCurve'].forEach(tag => {\r\n    document.getElementById(tag).style.display = 'none'\r\n  });\r\n};\r\n\r\nconst switchActives = (event) => {\r\n  event.preventDefault();\r\n\r\n  const target = event.target;\r\n  const parent = document.getElementById(target.id).parentNode;\r\n  const children = parent.querySelectorAll(\"*\");\r\n  \r\n  children.forEach(child => {\r\n    child.classList.remove(\"active\");\r\n  });\r\n  \r\n  target.className += \"active\";\r\n  const activeTime = document.getElementById(\"timeframes\").querySelectorAll(\".active\")[0].id.substring(4);//gives the number from the active view id\r\n  console.log('activeTime :>> ', activeTime);\r\n  curve(Number(activeTime) + 1, curveInfo);\r\n};\r\n\r\n\r\n//Main//\r\nconst currUid = localStorage.getItem('uid');\r\nlet region = sessionStorage.getItem('region');\r\nconsole.log('currUid :>> ', currUid);\r\n\r\nlet prodData = _data__WEBPACK_IMPORTED_MODULE_4__.dataST;\r\nlet cumlData = _data__WEBPACK_IMPORTED_MODULE_4__.dataCuml;\r\nlet moProdDataST = _data__WEBPACK_IMPORTED_MODULE_4__.moDataST;\r\n\r\nif (region == \"et\") {\r\n  prodData = _data__WEBPACK_IMPORTED_MODULE_4__.dataET\r\n  cumlData = _data__WEBPACK_IMPORTED_MODULE_4__.dataCumlET\r\n};\r\n\r\nconst curveInfo = {\r\n  prodData: prodData,\r\n  dataCuml: cumlData,\r\n  economicsData: _data__WEBPACK_IMPORTED_MODULE_4__.econ,\r\n  payoutData: _data__WEBPACK_IMPORTED_MODULE_4__.payout,\r\n  pumpData: _data__WEBPACK_IMPORTED_MODULE_4__.pump,\r\n  moProdDataST: moProdDataST,\r\n};\r\n\r\n['linear','logarithmic','DaysInception','Days30','Days365','Days180'].forEach(el => {\r\n  document.getElementById(el).addEventListener('click',switchActives);\r\n});\r\n\r\nconst dropdownId = '#siteSelection';\r\n_data__WEBPACK_IMPORTED_MODULE_4__.dropdown(dropdownId);\r\n\r\n(0,d3__WEBPACK_IMPORTED_MODULE_0__.select)(dropdownId).on(\"change\", () => {\r\n  curve(localStorage.getItem('initTime'), curveInfo);\r\n});\r\n\r\ndocument.getElementById(\"table\").addEventListener('click', () => {\r\n  if ((0,_ui__WEBPACK_IMPORTED_MODULE_5__.checkActive)('table') === true) return;\r\n  (0,_ui__WEBPACK_IMPORTED_MODULE_5__.setActive)(\"table\", 'DaysInception');\r\n  table(prodData);\r\n});\r\n\r\n//store currently visible plots in sessionstorage to access in relayout event; init to only oil(page load)\r\nlet currVisible = {\"visible\":[\"Oil [MBO]\"]};\r\nsessionStorage.setItem(\"visible_traces\",JSON.stringify(currVisible));\r\n\r\n//init page on load//\r\nwindow.onload = function () {\r\n  let activeTime = 'DaysInception';\r\n  if (localStorage.getItem('initTime') == 31) activeTime = 'Days30';\r\n  (0,_ui__WEBPACK_IMPORTED_MODULE_5__.setActiveTime)(activeTime);\r\n  (0,_ui__WEBPACK_IMPORTED_MODULE_5__.setActiveView)(localStorage.getItem('initScale'));\r\n  curve(localStorage.getItem('initTime'), curveInfo);\r\n}();\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q1g7QUFDQSwwQ0FBTTtBQUNOO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxNQUFNLGdEQUFXO0FBQ2pCLEVBQUUsOENBQVM7QUFDWDtBQUNBLENBQUM7QUFDRDtBQUNBLCtFQUErRTtBQUMvRSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxrREFBYTtBQUNmLEVBQUUsa0RBQWE7QUFDZjtBQUNBLENBQUMsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2QtMS8uL3NyYy9qcy9jdXJ2ZXMuanM/MTcwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBkaCBmcm9tICcuL2RhdGEnXHJcbmltcG9ydCB7IG1vbml0b3JSZWdpb24gfSBmcm9tICcuL3JlZ2lvbidcclxuaW1wb3J0IHsgbW9uaXRvckF1dGhTdGF0ZSB9IGZyb20gJy4vaW5kZXgnXHJcbmltcG9ydCB7IHNlbGVjdCB9IGZyb20gJ2QzJztcclxuaW1wb3J0IHsgbWFrZVRyYWNlLCBtYWtlTGF5b3V0LCBjb25maWcgfSBmcm9tICcuL2xheW91dCc7XHJcbmltcG9ydCB7IHNldEFjdGl2ZSwgc2V0QWN0aXZlVmlldywgY2hlY2tBY3RpdmUsIHNldEFjdGl2ZVRpbWUgfSBmcm9tICcuL3VpJztcclxuXHJcbm1vbml0b3JBdXRoU3RhdGUoKTtcclxubW9uaXRvclJlZ2lvbigpO1xyXG5cclxuY29uc3QgZGlzcGxheUVjb25vbWljcyA9IChkYXRhLCBzZWxlY3RlZE9wdGlvbikgPT4ge1xyXG4gIGxldCB3ZWxsUk1QTCA9IDA7XHJcbiAgbGV0IHdlbGxZVERQTCA9IDA7XHJcbiAgbGV0IG1vbnRoUG5MID0gXCJcIjtcclxuXHJcbiAgZGF0YS5mb3JFYWNoKChlY29XZWxsKSA9PiB7XHJcbiAgICBpZiAoZWNvV2VsbFtcIldlbGwgTmFtZVwiXS5pbmNsdWRlcyhzZWxlY3RlZE9wdGlvbikpIHtcclxuICAgICAgd2VsbFJNUEwgPSBlY29XZWxsW1wiUmVjZW50IE1vbnRoIFAmTFwiXTtcclxuICAgICAgd2VsbFlURFBMID0gZWNvV2VsbFtcIllURCBQJkxcIl07XHJcbiAgICAgIG1vbnRoUG5MID0gZWNvV2VsbFtcIkRhdGVcIl0uc2xpY2UoMCwgMyk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwbmxcIikuaW5uZXJIVE1MID0gYFAmTCA6ICQke3dlbGxSTVBMLnRvRml4ZWQoMCkudG9TdHJpbmcoKS5yZXBsYWNlKC9cXEIoPz0oXFxkezN9KSsoPyFcXGQpKS9nLCBcIixcIil9ICR7bW9udGhQbkx9YDtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIllURFwiKS5pbm5lckhUTUwgPSBgJCR7d2VsbFlURFBMLnRvRml4ZWQoMCkudG9TdHJpbmcoKS5yZXBsYWNlKC9cXEIoPz0oXFxkezN9KSsoPyFcXGQpKS9nLCBcIixcIil9IFlURGA7XHJcbn07XHJcblxyXG5jb25zdCBkaXNwbGF5UGF5b3V0ID0gKGRhdGEsIHNlbGVjdGVkT3B0aW9uKSA9PiB7XHJcbiAgdmFyIHBheW91dDEwMCA9IDA7XHJcbiAgZGF0YS5mb3JFYWNoKChwYXlvdXRXZWxsKSA9PiB7XHJcbiAgICBpZiAocGF5b3V0V2VsbFtcIldlbGwgTmFtZVwiXS5pbmNsdWRlcyhzZWxlY3RlZE9wdGlvbikpIHtcclxuICAgICAgcGF5b3V0MTAwID0gcGF5b3V0V2VsbFtcIiUgUGF5b3V0XCJdICogMTAwO1xyXG4gICAgfVxyXG4gIH0pO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGF5b3V0XCIpLmlubmVySFRNTCA9XHJcbiAgICBcIlBheW91dCA6IFwiICsgcGF5b3V0MTAwLnRvRml4ZWQoMCkudG9Mb2NhbGVTdHJpbmcoXCJlbi1VU1wiKSArIFwiJVwiO1xyXG4gIC8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYXlvdXQxMDBcIikuaW5uZXJIVE1MID0gcGF5b3V0MTAwLnRvRml4ZWQoMCkudG9Mb2NhbGVTdHJpbmcoXCJlbi1VU1wiKSsgXCIlXCI7XHJcblxyXG59O1xyXG5cclxuY29uc3QgZGlzcGxheVB1bXBJbmZvID0gKGRhdGEsIHNlbGVjdGVkT3B0aW9uKSA9PiB7XHJcbiAgbGV0IHdlbGxJbmZvID0gZGF0YS5maW5kKGkgPT4gaVtcIldlbGwgTmFtZVwiXSA9PT0gc2VsZWN0ZWRPcHRpb24pO1xyXG4gIGlmICh3ZWxsSW5mbyAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICBpZiAoXHJcbiAgICAgIHdlbGxJbmZvW1wiU1BNXCJdICE9PSAwXHJcbiAgICApIHtcclxuICAgICAgLy9VU0VEIGpRdWVyeSBMSUJSQVJZIFRPIFRPR0dMRSBUSEUgRElTUExBWSBPRiAjcHVtcEluZm9cclxuICAgICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoXCIjcHVtcEluZm9cIikudG9nZ2xlKCk7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjXCIpLmlubmVySFRNTCA9IGBDOiAke3dlbGxJbmZvW1wiQ1wiXX1gO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiU1BNXCIpLmlubmVySFRNTCA9IGBTUE06ICR7d2VsbEluZm9bXCJTUE1cIl19YDtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIkRIU0xcIikuaW5uZXJIVE1MID0gYERIIFNMOiAke3dlbGxJbmZvW1wiREggU0xcIl19YDtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImlkZWFsXCIpLmlubmVySFRNTCA9IGBJZGVhbCBiZnBkOiAke3dlbGxJbmZvW1wiSWRlYWwgYmZwZFwiXX1gO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHVtcEVmZlwiKS5pbm5lckhUTUwgPSBgUHVtcCBFZmY6ICR7d2VsbEluZm9bXCJQdW1wIEVmZlwiXSAqIDEwMH1gO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHVtcERlcHRoXCIpLmlubmVySFRNTCA9IGBQdW1wIERlcHRoOiAke3dlbGxJbmZvW1wiUHVtcCBEZXB0aFwiXX1gO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiR0ZMQVBcIikuaW5uZXJIVE1MID0gYEdGTEFQOiAke3dlbGxJbmZvW1wiR0ZMQVBcIl19YDtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIkluY1wiKS5pbm5lckhUTUwgPSBgSW5jOiAke3dlbGxJbmZvW1wiSW5jXCJdfWA7XHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoXCIjbm90UHVtcGluZ0luZm9cIikudG9nZ2xlKCk7XHJcbiAgICAgICAgJChcIiNub3RQdW1waW5nXCIpLmh0bWwoXCJUaGlzIHdlbGwgaXMgbm90IHB1bXBpbmdcIik7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICQoXCIjbm90UHVtcGluZ0luZm9cIikudG9nZ2xlKCk7XHJcbiAgICAgICQoXCIjbm90UHVtcGluZ1wiKS5odG1sKFwiTm8gcHVtcCBkYXRhIGF2YWlsYWJsZVwiKTtcclxuICAgIH0pO1xyXG4gIH07XHJcbn07XHJcblxyXG5jb25zdCBkaXNwbGF5Q3VtbERhdGEgPSAoZGF0YSwgc2VsZWN0ZWRPcHRpb24pID0+IHtcclxuICBsZXQgc2VsZWN0ZWRXZWxsID0ge1xyXG4gICAgY3VtbDogMCxcclxuICAgIGdhc0N1bWw6IDAsXHJcbiAgICB3YXRlckN1bWw6IDAsXHJcbiAgICBmb3JtYXRpb246IFwiXCJcclxuICB9O1xyXG5cclxuICBkYXRhLmZvckVhY2god2VsbCA9PiB7XHJcbiAgICBpZiAoc2VsZWN0ZWRPcHRpb24gPT09IHdlbGxbMF0pIHtcclxuICAgICAgc2VsZWN0ZWRXZWxsLmN1bWwgPSB3ZWxsWzFdO1xyXG4gICAgICBzZWxlY3RlZFdlbGwuZ2FzQ3VtbCA9IHdlbGxbM107XHJcbiAgICAgIHNlbGVjdGVkV2VsbC53YXRlckN1bWwgPSB3ZWxsWzJdO1xyXG4gICAgICBzZWxlY3RlZFdlbGwuZm9ybWF0aW9uID0gd2VsbFs0XTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgY29uc3QgZm9ybWF0aW9uRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvcm1hdGlvblwiKTtcclxuICBjb25zdCBjdW11bGF0aXZlRGF0YUVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjdW1sYXRpdmVEYXRhXCIpO1xyXG5cclxuICBpZiAoIXNlbGVjdGVkV2VsbC5mb3JtYXRpb24pIHtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmlsbGVyNFwiKS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcclxuICB9XHJcblxyXG4gIGZvcm1hdGlvbkVsLmlubmVySFRNTCA9IHNlbGVjdGVkV2VsbC5mb3JtYXRpb247XHJcbiAgY3VtdWxhdGl2ZURhdGFFbC5pbm5lckhUTUwgPSBgQ3VtdWxhdGl2ZTogJHtzZWxlY3RlZFdlbGwuY3VtbH0gTUJPLCAke3NlbGVjdGVkV2VsbC5nYXNDdW1sfSBNTUNGLCAke3NlbGVjdGVkV2VsbC53YXRlckN1bWx9IE1CV2A7XHJcblxyXG59O1xyXG5cclxuY29uc3QgZ2V0U2VsZWN0ZWRPcHRpb24gPSAoZGF0YSkgPT4ge1xyXG4gIGxldCBzZWxlY3RlZE9wdGlvbiA9IG51bGw7XHJcbiAgbGV0IG1lbnVOb2RlID0gc2VsZWN0KFwiI3NpdGVTZWxlY3Rpb25cIikubm9kZSgpLnZhbHVlO1xyXG5cclxuICBpZiAobWVudU5vZGUgIT0gXCJkZWZhdWx0XCIpIHtcclxuICAgIHNlbGVjdGVkT3B0aW9uID0gW21lbnVOb2RlXTtcclxuICB9IGVsc2UgaWYgKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oXCJzaXRlU2VsZWN0aW9uXCIpICE9IG51bGwpIHtcclxuICAgIHNlbGVjdGVkT3B0aW9uID0gW3Nlc3Npb25TdG9yYWdlLmdldEl0ZW0oXCJzaXRlU2VsZWN0aW9uXCIpXTtcclxuICAgIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oXCJzaXRlU2VsZWN0aW9uXCIpO1xyXG4gIH0gZWxzZSBzZWxlY3RlZE9wdGlvbiA9IFsuLi5kYXRhWzBdWzBdXTtcclxuXHJcbiAgcmV0dXJuIHNlbGVjdGVkT3B0aW9uLmpvaW4oJycpO1xyXG59O1xyXG5cclxuY29uc3QgY3VydmUgPSAodGltZUZyYW1lLCBkYXRhKSA9PiB7XHJcbiAgY29uc3Qgc2VsZWN0ZWRPcHRpb24gPSBnZXRTZWxlY3RlZE9wdGlvbihkYXRhLnByb2REYXRhKTtcclxuXHJcbiAgbGV0IHJlZ2lvbiA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oXCJyZWdpb25cIik7XHJcbiAgaWYgKHJlZ2lvbiA9PSBudWxsKSB7XHJcbiAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdyZWdpb24nLCAnc3QnKVxyXG4gICAgcmVnaW9uID0gJ3N0J1xyXG4gIH07XHJcblxyXG4gIGlmIChyZWdpb24gIT0gXCJldFwiKSB7XHJcbiAgICBkaXNwbGF5RWNvbm9taWNzKGRhdGEuZWNvbm9taWNzRGF0YSwgc2VsZWN0ZWRPcHRpb24pO1xyXG4gICAgZGlzcGxheVBheW91dChkYXRhLnBheW91dERhdGEsIHNlbGVjdGVkT3B0aW9uKTtcclxuICAgIGRpc3BsYXlQdW1wSW5mbyhkYXRhLnB1bXBEYXRhLCBzZWxlY3RlZE9wdGlvbik7XHJcblxyXG4gICAgLy8gSGlkZSBwcmV2aW91cyBwdW1waW5nIGluZm9cclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHVtcEluZm9cIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJub3RQdW1waW5nSW5mb1wiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcblxyXG4gICAgLy8gQ2xlYXIgcHVtcCBpbmZvIHRleHQgZm9yIG5leHQgc2VsZWN0aW9uXHJcbiAgICBbXCJjXCIsIFwiU1BNXCIsIFwiREhTTFwiLCBcImlkZWFsXCIsIFwicHVtcEVmZlwiLCBcInB1bXBEZXB0aFwiLCBcIkdGTEFQXCIsIFwiSW5jXCIsIFwibm90UHVtcGluZ1wiXS5mb3JFYWNoKGlkID0+IHtcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpLmlubmVySFRNTCA9IFwiXCI7XHJcbiAgICB9KTtcclxuICB9O1xyXG4gIGRpc3BsYXlDdW1sRGF0YShkYXRhLmRhdGFDdW1sLCBzZWxlY3RlZE9wdGlvbik7XHJcblxyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiem9vbUVsXCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiOyAvL2RvbnQgZGlzcGxheSBvbGQgem9vbSBkYXRhIGlmIHN3aXRjaGluZyBiL3Qgd2VsbHMvdGltZWZyYW1lc1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2VsbE5hbWVcIikuaW5uZXJIVE1MID0gc2VsZWN0ZWRPcHRpb247XHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpbmRpdmlkdWFsVGFibGVcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG5cclxuICBbJ29pbERlY2xpbmVDdXJ2ZScsICdnYXNEZWNsaW5lQ3VydmUnLCAnd2F0ZXJEZWNsaW5lQ3VydmUnLCAnd2F0ZXJDdXRDdXJ2ZScsICd0b3RhbEZsdWlkQ3VydmUnLCAnY29tYmluYXRpb25DdXJ2ZXMnLCAnY3VtbE9pbEN1cnZlJ10uZm9yRWFjaChpZCA9PiB7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgfSk7XHJcbiAgY29uc3Qgc2l0ZV9kYXRhID0gZGF0YS5wcm9kRGF0YS5maWx0ZXIoc2l0ZSA9PiBzaXRlWzBdID09PSBzZWxlY3RlZE9wdGlvbik7XHJcbiAgbGV0IHNpdGVfZGF0ZSA9IHNpdGVfZGF0YS5tYXAoc2l0ZSA9PiBzaXRlWzldKTtcclxuICBsZXQgc2l0ZV9vaWwgPSBzaXRlX2RhdGEubWFwKHNpdGUgPT4gc2l0ZVsyXSk7XHJcbiAgbGV0IHNpdGVfZ2FzID0gc2l0ZV9kYXRhLm1hcChzaXRlID0+IHNpdGVbM10pO1xyXG4gIGxldCBzaXRlX3dhdGVyID0gc2l0ZV9kYXRhLm1hcChzaXRlID0+IHNpdGVbNF0pO1xyXG4gIGxldCBjb21tZW50cyA9IHNpdGVfZGF0YS5tYXAoc2l0ZSA9PiBzaXRlWzddKTtcclxuICBsZXQgbW92aW5nQXZlcmFnZSA9IHNpdGVfZGF0YS5tYXAoc2l0ZSA9PiBzaXRlWzhdKTtcclxuICBsZXQgd2F0ZXJfY3V0ID0gc2l0ZV93YXRlci5tYXAoKHdhdGVyLCBpKSA9PiAod2F0ZXIgLyAod2F0ZXIgKyBzaXRlX29pbFtpXSkpICogMTAwKTtcclxuICBsZXQgdG90YWxfZmx1aWQgPSBzaXRlX29pbC5tYXAoKG9pbCwgaW5kZXgpID0+IG9pbCArIHNpdGVfd2F0ZXJbaW5kZXhdKTtcclxuICBpZiAodGltZUZyYW1lID4gMCkgW3NpdGVfZGF0ZSwgc2l0ZV9vaWwsIHNpdGVfZ2FzLCBzaXRlX3dhdGVyLCBjb21tZW50cywgbW92aW5nQXZlcmFnZV0gPVxyXG4gIFtzaXRlX2RhdGUsIHNpdGVfb2lsLCBzaXRlX2dhcywgc2l0ZV93YXRlciwgY29tbWVudHMsIG1vdmluZ0F2ZXJhZ2VdLm1hcChhcnIgPT4gYXJyLnNsaWNlKDAsIHRpbWVGcmFtZSkpO1xyXG5cclxuICAvLyBSRUFESU5HIE1PTlRITFkgREFUQVxyXG4gIGNvbnN0IG1vX3NpdGVfZGF0YSA9IGRhdGEubW9Qcm9kRGF0YVNULmZpbHRlcihzaXRlID0+IHNpdGVbMF0gPT09IHNlbGVjdGVkT3B0aW9uKTtcclxuICBsZXQgc2l0ZV9kYXRlX21vID0gbW9fc2l0ZV9kYXRhLm1hcChzaXRlID0+IHNpdGVbNl0pO1xyXG4gIGxldCBzaXRlX29pbF9tbyA9IG1vX3NpdGVfZGF0YS5tYXAoc2l0ZSA9PiBzaXRlWzFdKTtcclxuXHJcbiAgY29uc3QgY3VtbE1vT2lsID0gc2l0ZV9vaWxfbW8ucmVkdWNlKChhY2MsIHZhbCwgaWR4KSA9PiAoaWR4ID09PSAwID8gYWNjLmNvbmNhdCh2YWwpIDogYWNjLmNvbmNhdCh2YWwgKyBhY2NbaWR4IC0gMV0pKSwgW10pO1xyXG4gIFxyXG5cclxuICAvLyBDUkVBVEUgVFJBQ0VTIEZPUiBHUkFQSElOR1xyXG4gIGxldCB0cmFjZU9pbCA9IG1ha2VUcmFjZSggXHJcbiAgICBzaXRlX2RhdGUsXHJcbiAgICBzaXRlX29pbCxcclxuICAgIFwiT2lsIFtNQk9dXCIsXHJcbiAgICBudWxsLFxyXG4gICAgXCJncmVlblwiLFxyXG4gICAgbnVsbCxcclxuICAgIGNvbW1lbnRzXHJcbiAgKTtcclxuXHJcbiAgY29uc3QgdHJhY2VPaWxBdmcgPSBtYWtlVHJhY2UoXHJcbiAgICBzaXRlX2RhdGUsXHJcbiAgICBtb3ZpbmdBdmVyYWdlLFxyXG4gICAgXCI3IERheSBBdmdcIixcclxuICAgIFwibGluZVwiLFxyXG4gICAgbnVsbCxcclxuICAgIFwiZG90XCJcclxuICApO1xyXG5cclxuICBsZXQgdHJhY2VHYXMgPSBtYWtlVHJhY2UoXHJcbiAgICBzaXRlX2RhdGUsXHJcbiAgICBzaXRlX2dhcyxcclxuICAgIFwiR2FzIFtNQ0ZdXCIsXHJcbiAgICBcImxpbmVcIixcclxuICAgIFwicmVkXCIpO1xyXG5cclxuICBsZXQgdHJhY2VXYXRlciA9IG1ha2VUcmFjZShcclxuICAgIHNpdGVfZGF0ZSxcclxuICAgIHNpdGVfd2F0ZXIsXHJcbiAgICBcIldhdGVyIFtNQlddXCIsXHJcbiAgICBcImxpbmVcIixcclxuICAgIFwiYmx1ZVwiLFxyXG4gICk7XHJcblxyXG4gIGNvbnN0IHRyYWNlQ3V0ID0gbWFrZVRyYWNlKFxyXG4gICAgc2l0ZV9kYXRlLFxyXG4gICAgd2F0ZXJfY3V0LFxyXG4gICAgLy8gXCJXYXRlciBbTWJ3XVwiLFxyXG4gICAgXCJsaW5lXCIsXHJcbiAgICBcIiMyNUM0RENcIlxyXG4gICk7XHJcblxyXG4gIGxldCB0cmFjZUZsdWlkID0gbWFrZVRyYWNlKFxyXG4gICAgc2l0ZV9kYXRlLFxyXG4gICAgdG90YWxfZmx1aWQsXHJcbiAgICBcIlRvdGFsIEZsdWlkIFtNQl1cIixcclxuICAgIFwibGluZVwiLFxyXG4gICAgXCJibGFja1wiXHJcbiAgKTtcclxuXHJcbiAgY29uc3QgdHJhY2VDdW1sT2lsID0gbWFrZVRyYWNlKFxyXG4gICAgc2l0ZV9kYXRlX21vLFxyXG4gICAgY3VtbE1vT2lsLFxyXG4gICAgXCJPaWwgW01CT11cIixcclxuICAgIFwibGluZVwiLFxyXG4gICAgXCJncmVlblwiXHJcbiAgKTtcclxuXHJcbiAgLy8gY29uc3QgbGF5b3V0Q3V0ID0gbWFrZUxheW91dChcIldhdGVyIEN1dCBQZXJjZW50YWdlXCIpO1xyXG4gIGNvbnN0IHNjYWxlID0gKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9nYXJpdGhtaWNcIikuY2xhc3NMaXN0LmNvbnRhaW5zKFwiYWN0aXZlXCIpKSA/ICdsb2cnIDogJ2xpbmVhcic7XHJcbiAgY29uc3QgcGxvdENvbnRhaW5lcnMgPSBbXCJvaWxEZWNsaW5lQ3VydmVcIiwgXCJnYXNEZWNsaW5lQ3VydmVcIiwgXCJ3YXRlckRlY2xpbmVDdXJ2ZVwiLCAndG90YWxGbHVpZEN1cnZlJywgJ3dhdGVyQ3V0Q3VydmUnLCAnY29tYmluYXRpb25DdXJ2ZXMnLCAnY3VtbE9pbEN1cnZlJ107XHJcbiAgY29uc3QgY29tYmluYXRpb24gPSBbdHJhY2VHYXMsIHRyYWNlT2lsLCB0cmFjZVdhdGVyLCB0cmFjZUZsdWlkXTtcclxuXHJcbiAgbGV0IHRyYWNlQXJyYXlzID0gW1xyXG4gICAgW3RyYWNlT2lsLCB0cmFjZU9pbEF2Z10sXHJcbiAgICBbdHJhY2VHYXNdLFxyXG4gICAgW3RyYWNlV2F0ZXJdLFxyXG4gICAgW3RyYWNlRmx1aWRdLFxyXG4gICAgW3RyYWNlQ3V0XSxcclxuICAgIGNvbWJpbmF0aW9uLFxyXG4gICAgW3RyYWNlQ3VtbE9pbF1cclxuICBdO1xyXG5cclxuICBwbG90Q29udGFpbmVycy5mb3JFYWNoKChjb250YWluZXIsIGkpID0+IHtcclxuICAgIHRyYWNlQXJyYXlzW2ldLmZvckVhY2godHJhY2UgPT4ge1xyXG4gICAgICB0cmFjZS52aXNpYmxlID0gKGkgPT09IDUgJiYgdHJhY2UubmFtZSAhPT0gXCJPaWwgW01CT11cIikgPyBcImxlZ2VuZG9ubHlcIiA6IHRyYWNlLnZpc2libGU7XHJcbiAgICB9KTtcclxuICAgIGNvbnN0IGxheW91dCA9IG1ha2VMYXlvdXQoWydPaWwgdnMgVGltZSAoQk9QRCknLCAnR2FzIHZzIFRpbWUgKE1DRkQpJywgJ1dhdGVyIHZzIFRpbWUgKEJXUEQpJywgJ1RvdGFsIEZsdWlkIHZzIFRpbWUgKEJGUEQpJywgJ1dhdGVyIEN1dCBQZXJjZW50YWdlJywgJ0NvbWJpbmVkIFByb2R1Y3Rpb24nLCAnQ3VtdWxhdGl2ZSBPaWwgdnMgVGltZSddW2ldLCBzY2FsZSwgXHJcbiAgICAoc2NhbGUgPT09ICdsb2cnKSA/IFsxLCAyLCA1LCAxMCwgMjAsIDUwLCAxMDAsIDIwMCwgNTAwLCAxMDAwLCAyMDAwLCAzMDAwXSA6IG51bGwpO1xyXG4gICAgUGxvdGx5Lm5ld1Bsb3QoY29udGFpbmVyLCB0cmFjZUFycmF5c1tpXSwgbGF5b3V0LCBjb25maWcpO1xyXG4gIH0pO1xyXG5cclxuICBjb25zdCBjb21ibyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb21iaW5hdGlvbkN1cnZlcycpO1xyXG4gIGNvbWJvLm9uKFwicGxvdGx5X3JlbGF5b3V0XCIsIGZ1bmN0aW9uIChldmVudERhdGEpIHtcclxuICAgIEpTT04uc3RyaW5naWZ5KGV2ZW50RGF0YSk7XHJcbiAgICBjb25zdCB6b29tRUwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInpvb21FbFwiKTtcclxuICAgIHpvb21FTC5pbm5lckhUTUwgPSAnJztcclxuICAgIGNvbnN0IHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICBwLnRleHRDb250ZW50ID0gYFByb2R1Y2VkOmA7XHJcbiAgICB6b29tRUwuYXBwZW5kQ2hpbGQocCk7XHJcblxyXG4gICAgbGV0IHsgXCJ4YXhpcy5yYW5nZVswXVwiOiB4UmFuZ2VTdGFydCwgXCJ4YXhpcy5yYW5nZVsxXVwiOiB4UmFuZ2VFbmQgfSA9IGV2ZW50RGF0YTtcclxuICAgIGlmICgheFJhbmdlU3RhcnQpIHsgLy8gaWYgZG91YmxlLWNsaWNrZWRcclxuICAgICAgeFJhbmdlU3RhcnQgPSBzaXRlX2RhdGVbc2l0ZV9kYXRlLmxlbmd0aCAtIDFdO1xyXG4gICAgICB4UmFuZ2VFbmQgPSBzaXRlX2RhdGVbMF07XHJcbiAgICB9XHJcbiAgICBjb25zdCB4U3RhcnQgPSB4UmFuZ2VTdGFydC5zdWJzdHJpbmcoMCwgMTApO1xyXG4gICAgY29uc3QgeEVuZCA9IHhSYW5nZUVuZC5zdWJzdHJpbmcoMCwgMTApO1xyXG5cclxuICAgIGNvbnN0IHN0YXJ0SWR4ID0gc2l0ZV9kYXRlLmluZGV4T2YoYCR7eFN0YXJ0fVQwMDowMDowMC4wMDBaYCk7XHJcbiAgICBjb25zdCBlbmRJZHggPSBzaXRlX2RhdGUuaW5kZXhPZihgJHt4RW5kfVQwMDowMDowMC4wMDBaYCk7XHJcblxyXG4gICAgaWYgKHN0YXJ0SWR4ID09PSAtMSkgeyAvLyB6b29tZWQgd2hlcmUgbm8gZGF0YVxyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBjb25zdCB2aXNpYmxlX3RyYWNlcyA9IEpTT04ucGFyc2Uoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndmlzaWJsZV90cmFjZXMnKSk7XHJcbiAgICBjb25zdCBtYXAgPSB7J0dhcyBbTUNGXSc6IHNpdGVfZ2FzLCAnT2lsIFtNQk9dJzogc2l0ZV9vaWwsICdXYXRlciBbTUJXXSc6IHNpdGVfd2F0ZXIsICdUb3RhbCBGbHVpZCBbTUJdJzogdG90YWxfZmx1aWQgfTtcclxuXHJcbiAgICBmb3IgKGNvbnN0W2tleSx2YWxzXSBvZiBPYmplY3QuZW50cmllcyh2aXNpYmxlX3RyYWNlcykpe1xyXG4gICAgICBmb3IgKGxldCB2YWwgb2YgdmFscyl7XHJcbiAgICAgICAgY29uc3QgZGF0YSA9IG1hcFt2YWxdO1xyXG4gICAgICAgIGNvbnN0IHN1bSA9IChkYXRhLnNsaWNlKGVuZElkeCwgc3RhcnRJZHggKyAxKS5yZWR1Y2UoKGFjYywgY3VyKSA9PiBhY2MgKyBjdXIsIDApLzEwMDApLnRvRml4ZWQoMSk7XHJcblxyXG4gICAgICAgIGxldCBjaG9wID0gLTU7XHJcbiAgICAgICAgaWYgKHZhbCA9PSAnVG90YWwgRmx1aWQgW01CXScpIGNob3AgPSAtNDsgXHJcbiAgICAgICAgY29uc3QgdW5pdCA9IHZhbC5zbGljZShjaG9wKTtcclxuICAgICAgICBsZXQgbmFtZSA9IHZhbC5zbGljZSgwLCBjaG9wKTtcclxuICAgICAgICBpZiAodmFsID09ICdUb3RhbCBGbHVpZCBbTUJdJykgbmFtZSA9IGAke25hbWV9IGA7IFxyXG5cclxuICAgICAgICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgICAgIHAudGV4dENvbnRlbnQgPSBgJHtuYW1lfTogJHtzdW19ICR7dW5pdH1gO1xyXG4gICAgICAgIHAuc3R5bGUuZm9udFNpemUgPSAnMTVweCc7XHJcbiAgICAgICAgem9vbUVMLmFwcGVuZENoaWxkKHApO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICB6b29tRUwuc3R5bGUudmlzaWJpbGl0eSA9IFwidmlzaWJsZVwiO1xyXG4gIH0pO1xyXG5cclxuICBjb21iby5vbigncGxvdGx5X2xlZ2VuZGNsaWNrJywgZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgY29uc3QgdHJhY2VJZHggPSBkYXRhLmN1cnZlTnVtYmVyO1xyXG4gICAgY29uc3QgbmFtZSA9IGNvbWJpbmF0aW9uW3RyYWNlSWR4XS5uYW1lO1xyXG4gICAgbGV0IGN1cnJWaXNpYmxlID0gSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS52aXNpYmxlX3RyYWNlcykgfHwge1widmlzaWJsZV90cmFjZXNcIjogW119O1xyXG5cclxuICAgIGlmIChjdXJyVmlzaWJsZS52aXNpYmxlLmluY2x1ZGVzKG5hbWUpKXtcclxuICAgICAgY3VyclZpc2libGUudmlzaWJsZSA9IGN1cnJWaXNpYmxlLnZpc2libGUuZmlsdGVyKGVsID0+IGVsICE9PSBuYW1lKVxyXG4gICAgfWVsc2V7XHJcbiAgICAgIGN1cnJWaXNpYmxlLnZpc2libGUucHVzaChuYW1lKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCd2aXNpYmxlX3RyYWNlcycsIEpTT04uc3RyaW5naWZ5KGN1cnJWaXNpYmxlKSk7XHJcbiAgfSlcclxuXHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaXRlU2VsZWN0aW9uXCIpLmZvY3VzKCk7XHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmaWxsZXI0XCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxufTtcclxuXHJcbmNvbnN0IHRhYmxlID0gKGNvcmVEYXRhKSA9PiB7XHJcbiAgY29uc3QgZGF0YSA9IGNvcmVEYXRhLm1hcChlbCA9PiAoWy4uLmVsXSkpXHJcbiAgY29uc3Qgc2VsZWN0ZWRPcHRpb24gPSBnZXRTZWxlY3RlZE9wdGlvbihkYXRhKTtcclxuICBjb25zdCB3ZWxsID0gZGF0YS5maWx0ZXIoaSA9PiBpWzBdID09IHNlbGVjdGVkT3B0aW9uKTtcclxuXHJcbiAgd2VsbC5mb3JFYWNoKHcgPT4ge1xyXG4gICAgdy5zaGlmdCgpO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAyOyBpKyspIHcucG9wKCk7XHJcbiAgfSk7XHJcbiAgZGguYnVpbGRUYWJsZSh3ZWxsKTtcclxuXHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2luZGl2aWR1YWxUYWJsZScpLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcclxuICBbJ29pbERlY2xpbmVDdXJ2ZScsICdnYXNEZWNsaW5lQ3VydmUnLCAnd2F0ZXJEZWNsaW5lQ3VydmUnLCAnd2F0ZXJDdXRDdXJ2ZScsICd0b3RhbEZsdWlkQ3VydmUnLCAnY29tYmluYXRpb25DdXJ2ZXMnLCAnY3VtT2lsQ3VydmUnXS5mb3JFYWNoKHRhZyA9PiB7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0YWcpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcclxuICB9KTtcclxufTtcclxuXHJcbmNvbnN0IHN3aXRjaEFjdGl2ZXMgPSAoZXZlbnQpID0+IHtcclxuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XHJcbiAgY29uc3QgcGFyZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGFyZ2V0LmlkKS5wYXJlbnROb2RlO1xyXG4gIGNvbnN0IGNoaWxkcmVuID0gcGFyZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIqXCIpO1xyXG4gIFxyXG4gIGNoaWxkcmVuLmZvckVhY2goY2hpbGQgPT4ge1xyXG4gICAgY2hpbGQuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICB9KTtcclxuICBcclxuICB0YXJnZXQuY2xhc3NOYW1lICs9IFwiYWN0aXZlXCI7XHJcbiAgY29uc3QgYWN0aXZlVGltZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGltZWZyYW1lc1wiKS5xdWVyeVNlbGVjdG9yQWxsKFwiLmFjdGl2ZVwiKVswXS5pZC5zdWJzdHJpbmcoNCk7Ly9naXZlcyB0aGUgbnVtYmVyIGZyb20gdGhlIGFjdGl2ZSB2aWV3IGlkXHJcbiAgY29uc29sZS5sb2coJ2FjdGl2ZVRpbWUgOj4+ICcsIGFjdGl2ZVRpbWUpO1xyXG4gIGN1cnZlKE51bWJlcihhY3RpdmVUaW1lKSArIDEsIGN1cnZlSW5mbyk7XHJcbn07XHJcblxyXG5cclxuLy9NYWluLy9cclxuY29uc3QgY3VyclVpZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1aWQnKTtcclxubGV0IHJlZ2lvbiA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3JlZ2lvbicpO1xyXG5jb25zb2xlLmxvZygnY3VyclVpZCA6Pj4gJywgY3VyclVpZCk7XHJcblxyXG5sZXQgcHJvZERhdGEgPSBkaC5kYXRhU1Q7XHJcbmxldCBjdW1sRGF0YSA9IGRoLmRhdGFDdW1sO1xyXG5sZXQgbW9Qcm9kRGF0YVNUID0gZGgubW9EYXRhU1Q7XHJcblxyXG5pZiAocmVnaW9uID09IFwiZXRcIikge1xyXG4gIHByb2REYXRhID0gZGguZGF0YUVUXHJcbiAgY3VtbERhdGEgPSBkaC5kYXRhQ3VtbEVUXHJcbn07XHJcblxyXG5jb25zdCBjdXJ2ZUluZm8gPSB7XHJcbiAgcHJvZERhdGE6IHByb2REYXRhLFxyXG4gIGRhdGFDdW1sOiBjdW1sRGF0YSxcclxuICBlY29ub21pY3NEYXRhOiBkaC5lY29uLFxyXG4gIHBheW91dERhdGE6IGRoLnBheW91dCxcclxuICBwdW1wRGF0YTogZGgucHVtcCxcclxuICBtb1Byb2REYXRhU1Q6IG1vUHJvZERhdGFTVCxcclxufTtcclxuXHJcblsnbGluZWFyJywnbG9nYXJpdGhtaWMnLCdEYXlzSW5jZXB0aW9uJywnRGF5czMwJywnRGF5czM2NScsJ0RheXMxODAnXS5mb3JFYWNoKGVsID0+IHtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbCkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLHN3aXRjaEFjdGl2ZXMpO1xyXG59KTtcclxuXHJcbmNvbnN0IGRyb3Bkb3duSWQgPSAnI3NpdGVTZWxlY3Rpb24nO1xyXG5kaC5kcm9wZG93bihkcm9wZG93bklkKTtcclxuXHJcbnNlbGVjdChkcm9wZG93bklkKS5vbihcImNoYW5nZVwiLCAoKSA9PiB7XHJcbiAgY3VydmUobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2luaXRUaW1lJyksIGN1cnZlSW5mbyk7XHJcbn0pO1xyXG5cclxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0YWJsZVwiKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICBpZiAoY2hlY2tBY3RpdmUoJ3RhYmxlJykgPT09IHRydWUpIHJldHVybjtcclxuICBzZXRBY3RpdmUoXCJ0YWJsZVwiLCAnRGF5c0luY2VwdGlvbicpO1xyXG4gIHRhYmxlKHByb2REYXRhKTtcclxufSk7XHJcblxyXG4vL3N0b3JlIGN1cnJlbnRseSB2aXNpYmxlIHBsb3RzIGluIHNlc3Npb25zdG9yYWdlIHRvIGFjY2VzcyBpbiByZWxheW91dCBldmVudDsgaW5pdCB0byBvbmx5IG9pbChwYWdlIGxvYWQpXHJcbmxldCBjdXJyVmlzaWJsZSA9IHtcInZpc2libGVcIjpbXCJPaWwgW01CT11cIl19O1xyXG5zZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFwidmlzaWJsZV90cmFjZXNcIixKU09OLnN0cmluZ2lmeShjdXJyVmlzaWJsZSkpO1xyXG5cclxuLy9pbml0IHBhZ2Ugb24gbG9hZC8vXHJcbndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgbGV0IGFjdGl2ZVRpbWUgPSAnRGF5c0luY2VwdGlvbic7XHJcbiAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdpbml0VGltZScpID09IDMxKSBhY3RpdmVUaW1lID0gJ0RheXMzMCc7XHJcbiAgc2V0QWN0aXZlVGltZShhY3RpdmVUaW1lKTtcclxuICBzZXRBY3RpdmVWaWV3KGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdpbml0U2NhbGUnKSk7XHJcbiAgY3VydmUobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2luaXRUaW1lJyksIGN1cnZlSW5mbyk7XHJcbn0oKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/curves.js\n");

/***/ }),

/***/ "./src/js/layout.js":
/*!**************************!*\
  !*** ./src/js/layout.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   layoutWbd: () => (/* binding */ layoutWbd),\n/* harmony export */   makeLayout: () => (/* binding */ makeLayout),\n/* harmony export */   makeTrace: () => (/* binding */ makeTrace)\n/* harmony export */ });\nconst makeTrace = (x, y, name, type, color, dash, text, visible=true) => ({\r\n    x,\r\n    y,\r\n    text,\r\n    name,\r\n    visible,\r\n    type: type || \"line\",\r\n    line: {\r\n        color,\r\n        dash,\r\n    },\r\n});\r\n\r\nconst makeLayout = (title, type, tickvals) => ({\r\n    title,\r\n    yaxis: {\r\n        type: type || \"linear\",\r\n        rangemode: \"tozero\",\r\n        autorange: true,\r\n        tickformat: \"f\",\r\n        tickvals,\r\n        gridcolor: \"#dbdbdb\",\r\n    },\r\n    xaxis: {\r\n        gridcolor: \"#dbdbdb\",\r\n    },\r\n});\r\n\r\nconst config = {\r\n    modeBarButtonsToRemove: [\r\n        \"sendDataToCloud\",\r\n        \"autoScale2d\",\r\n        \"hoverClosestCartesian\",\r\n        \"hoverCompareCartesian\",\r\n        \"lasso2d\",\r\n        \"zoomIn2d\",\r\n        \"zoomOut2d\",\r\n        \"toggleSpikelines\",\r\n    ],\r\n    displaylogo: false,\r\n    responsive: true,\r\n};\r\n\r\nconst layoutWbd = (max,min,minTVD,wellName) => ({\r\n    width: 1620,\r\n    height: 700,\r\n\r\n    margin: {\r\n        l: 0,\r\n        r: 0,\r\n        b: 0,\r\n        t: 0,\r\n    },\r\n\r\n    title: {\r\n        text: \"Drilling for \" + wellName + \", Dimmit County, TX\",\r\n        y: 0.98,\r\n    },\r\n\r\n    legend: {\r\n        x: 0.8,\r\n        y: 0.8,\r\n    },\r\n    scene: {\r\n        aspectmode: \"cube\",\r\n        xaxis: {\r\n            title: \"Easting\",\r\n            nticks: 8,\r\n            range: [max, min],\r\n            gridcolor: \"#8a8a8a\",\r\n            tickcolor: \"#050505\",\r\n            backgroundcolor: \"#ededed\",\r\n            showbackground: true,\r\n        },\r\n        yaxis: {\r\n            title: \"Northing\",\r\n            nticks: 8,\r\n            range: [max, min],\r\n            gridcolor: \"#8a8a8a\",\r\n            tickcolor: \"#050505\",\r\n            backgroundcolor: \"#f0f1f2\",\r\n            showbackground: true,\r\n\r\n        },\r\n        zaxis: {\r\n            title: \"TVD\",\r\n            nticks: 5,\r\n            range: [minTVD, -3000],\r\n            gridcolor: \"#8a8a8a\",\r\n            tickcolor: \"#050505\",\r\n            backgroundcolor: \"#ededed\",\r\n            showbackground: true,\r\n        },\r\n    },\r\n    \r\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbGF5b3V0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBQ0Q7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBQ0Q7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2QtMS8uL3NyYy9qcy9sYXlvdXQuanM/NmZlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgbWFrZVRyYWNlID0gKHgsIHksIG5hbWUsIHR5cGUsIGNvbG9yLCBkYXNoLCB0ZXh0LCB2aXNpYmxlPXRydWUpID0+ICh7XHJcbiAgICB4LFxyXG4gICAgeSxcclxuICAgIHRleHQsXHJcbiAgICBuYW1lLFxyXG4gICAgdmlzaWJsZSxcclxuICAgIHR5cGU6IHR5cGUgfHwgXCJsaW5lXCIsXHJcbiAgICBsaW5lOiB7XHJcbiAgICAgICAgY29sb3IsXHJcbiAgICAgICAgZGFzaCxcclxuICAgIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1ha2VMYXlvdXQgPSAodGl0bGUsIHR5cGUsIHRpY2t2YWxzKSA9PiAoe1xyXG4gICAgdGl0bGUsXHJcbiAgICB5YXhpczoge1xyXG4gICAgICAgIHR5cGU6IHR5cGUgfHwgXCJsaW5lYXJcIixcclxuICAgICAgICByYW5nZW1vZGU6IFwidG96ZXJvXCIsXHJcbiAgICAgICAgYXV0b3JhbmdlOiB0cnVlLFxyXG4gICAgICAgIHRpY2tmb3JtYXQ6IFwiZlwiLFxyXG4gICAgICAgIHRpY2t2YWxzLFxyXG4gICAgICAgIGdyaWRjb2xvcjogXCIjZGJkYmRiXCIsXHJcbiAgICB9LFxyXG4gICAgeGF4aXM6IHtcclxuICAgICAgICBncmlkY29sb3I6IFwiI2RiZGJkYlwiLFxyXG4gICAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xyXG4gICAgbW9kZUJhckJ1dHRvbnNUb1JlbW92ZTogW1xyXG4gICAgICAgIFwic2VuZERhdGFUb0Nsb3VkXCIsXHJcbiAgICAgICAgXCJhdXRvU2NhbGUyZFwiLFxyXG4gICAgICAgIFwiaG92ZXJDbG9zZXN0Q2FydGVzaWFuXCIsXHJcbiAgICAgICAgXCJob3ZlckNvbXBhcmVDYXJ0ZXNpYW5cIixcclxuICAgICAgICBcImxhc3NvMmRcIixcclxuICAgICAgICBcInpvb21JbjJkXCIsXHJcbiAgICAgICAgXCJ6b29tT3V0MmRcIixcclxuICAgICAgICBcInRvZ2dsZVNwaWtlbGluZXNcIixcclxuICAgIF0sXHJcbiAgICBkaXNwbGF5bG9nbzogZmFsc2UsXHJcbiAgICByZXNwb25zaXZlOiB0cnVlLFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGxheW91dFdiZCA9IChtYXgsbWluLG1pblRWRCx3ZWxsTmFtZSkgPT4gKHtcclxuICAgIHdpZHRoOiAxNjIwLFxyXG4gICAgaGVpZ2h0OiA3MDAsXHJcblxyXG4gICAgbWFyZ2luOiB7XHJcbiAgICAgICAgbDogMCxcclxuICAgICAgICByOiAwLFxyXG4gICAgICAgIGI6IDAsXHJcbiAgICAgICAgdDogMCxcclxuICAgIH0sXHJcblxyXG4gICAgdGl0bGU6IHtcclxuICAgICAgICB0ZXh0OiBcIkRyaWxsaW5nIGZvciBcIiArIHdlbGxOYW1lICsgXCIsIERpbW1pdCBDb3VudHksIFRYXCIsXHJcbiAgICAgICAgeTogMC45OCxcclxuICAgIH0sXHJcblxyXG4gICAgbGVnZW5kOiB7XHJcbiAgICAgICAgeDogMC44LFxyXG4gICAgICAgIHk6IDAuOCxcclxuICAgIH0sXHJcbiAgICBzY2VuZToge1xyXG4gICAgICAgIGFzcGVjdG1vZGU6IFwiY3ViZVwiLFxyXG4gICAgICAgIHhheGlzOiB7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcIkVhc3RpbmdcIixcclxuICAgICAgICAgICAgbnRpY2tzOiA4LFxyXG4gICAgICAgICAgICByYW5nZTogW21heCwgbWluXSxcclxuICAgICAgICAgICAgZ3JpZGNvbG9yOiBcIiM4YThhOGFcIixcclxuICAgICAgICAgICAgdGlja2NvbG9yOiBcIiMwNTA1MDVcIixcclxuICAgICAgICAgICAgYmFja2dyb3VuZGNvbG9yOiBcIiNlZGVkZWRcIixcclxuICAgICAgICAgICAgc2hvd2JhY2tncm91bmQ6IHRydWUsXHJcbiAgICAgICAgfSxcclxuICAgICAgICB5YXhpczoge1xyXG4gICAgICAgICAgICB0aXRsZTogXCJOb3J0aGluZ1wiLFxyXG4gICAgICAgICAgICBudGlja3M6IDgsXHJcbiAgICAgICAgICAgIHJhbmdlOiBbbWF4LCBtaW5dLFxyXG4gICAgICAgICAgICBncmlkY29sb3I6IFwiIzhhOGE4YVwiLFxyXG4gICAgICAgICAgICB0aWNrY29sb3I6IFwiIzA1MDUwNVwiLFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kY29sb3I6IFwiI2YwZjFmMlwiLFxyXG4gICAgICAgICAgICBzaG93YmFja2dyb3VuZDogdHJ1ZSxcclxuXHJcbiAgICAgICAgfSxcclxuICAgICAgICB6YXhpczoge1xyXG4gICAgICAgICAgICB0aXRsZTogXCJUVkRcIixcclxuICAgICAgICAgICAgbnRpY2tzOiA1LFxyXG4gICAgICAgICAgICByYW5nZTogW21pblRWRCwgLTMwMDBdLFxyXG4gICAgICAgICAgICBncmlkY29sb3I6IFwiIzhhOGE4YVwiLFxyXG4gICAgICAgICAgICB0aWNrY29sb3I6IFwiIzA1MDUwNVwiLFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kY29sb3I6IFwiI2VkZWRlZFwiLFxyXG4gICAgICAgICAgICBzaG93YmFja2dyb3VuZDogdHJ1ZSxcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIFxyXG59KTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/layout.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	(() => {
/******/ 		var webpackQueues = typeof Symbol === "function" ? Symbol("webpack queues") : "__webpack_queues__";
/******/ 		var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var webpackError = typeof Symbol === "function" ? Symbol("webpack error") : "__webpack_error__";
/******/ 		var resolveQueue = (queue) => {
/******/ 			if(queue && !queue.d) {
/******/ 				queue.d = 1;
/******/ 				queue.forEach((fn) => (fn.r--));
/******/ 				queue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));
/******/ 			}
/******/ 		}
/******/ 		var wrapDeps = (deps) => (deps.map((dep) => {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 				if(dep[webpackQueues]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					queue.d = 0;
/******/ 					dep.then((r) => {
/******/ 						obj[webpackExports] = r;
/******/ 						resolveQueue(queue);
/******/ 					}, (e) => {
/******/ 						obj[webpackError] = e;
/******/ 						resolveQueue(queue);
/******/ 					});
/******/ 					var obj = {};
/******/ 					obj[webpackQueues] = (fn) => (fn(queue));
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 			ret[webpackQueues] = x => {};
/******/ 			ret[webpackExports] = dep;
/******/ 			return ret;
/******/ 		}));
/******/ 		__webpack_require__.a = (module, body, hasAwait) => {
/******/ 			var queue;
/******/ 			hasAwait && ((queue = []).d = 1);
/******/ 			var depQueues = new Set();
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var promise = new Promise((resolve, rej) => {
/******/ 				reject = rej;
/******/ 				outerResolve = resolve;
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise["catch"](x => {}));
/******/ 			module.exports = promise;
/******/ 			body((deps) => {
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn;
/******/ 				var getResult = () => (currentDeps.map((d) => {
/******/ 					if(d[webpackError]) throw d[webpackError];
/******/ 					return d[webpackExports];
/******/ 				}))
/******/ 				var promise = new Promise((resolve) => {
/******/ 					fn = () => (resolve(getResult));
/******/ 					fn.r = 0;
/******/ 					var fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));
/******/ 					currentDeps.map((dep) => (dep[webpackQueues](fnQueue)));
/******/ 				});
/******/ 				return fn.r ? promise : getResult();
/******/ 			}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));
/******/ 			queue && (queue.d = 0);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"curves": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkprod_1"] = self["webpackChunkprod_1"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors-node_modules_firebase_app_dist_esm_index_esm_js-node_modules_firebase_auth_dist_esm_i-d0574a","vendors-node_modules_d3_src_index_js","src_js_data_js-src_js_index_js-src_js_region_js"], () => (__webpack_require__("./src/js/curves.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;