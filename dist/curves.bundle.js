/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/curves.js":
/*!**************************!*\
  !*** ./src/js/curves.js ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data */ \"./src/js/data.js\");\n/* harmony import */ var _region__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./region */ \"./src/js/region.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./src/js/index.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ \"./node_modules/d3/src/index.js\");\n/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./layout */ \"./src/js/layout.js\");\n/* harmony import */ var _ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ui */ \"./src/js/ui.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_data__WEBPACK_IMPORTED_MODULE_4__]);\n_data__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n(0,_index__WEBPACK_IMPORTED_MODULE_1__.monitorAuthState)();\r\n(0,_region__WEBPACK_IMPORTED_MODULE_2__.monitorRegion)();\r\n\r\nconst displayEconomics = (data, selectedOption) => {\r\n  let wellRMPL = 0;\r\n  let wellYTDPL = 0;\r\n  let monthPnL = \"\";\r\n\r\n  data.forEach((ecoWell) => {\r\n    if (ecoWell[\"Well Name\"].includes(selectedOption)) {\r\n      wellRMPL = ecoWell[\"Recent Month P&L\"];\r\n      wellYTDPL = ecoWell[\"YTD P&L\"];\r\n      monthPnL = ecoWell[\"Date\"].slice(0, 3);\r\n    }\r\n  });\r\n  document.getElementById(\"pnl\").innerHTML = `P&L : $${wellRMPL.toFixed(0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} ${monthPnL}`;\r\n  document.getElementById(\"YTD\").innerHTML = `$${wellYTDPL.toFixed(0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} YTD`;\r\n};\r\n\r\nconst displayPayout = (data, selectedOption) => {\r\n  var payout100 = 0;\r\n  data.forEach((payoutWell) => {\r\n    if (payoutWell[\"Well Name\"].includes(selectedOption)) {\r\n      payout100 = payoutWell[\"% Payout\"] * 100;\r\n    }\r\n  });\r\n  document.getElementById(\"payout\").innerHTML =\r\n    \"Payout : \" + payout100.toFixed(0).toLocaleString(\"en-US\") + \"%\";\r\n  //document.getElementById(\"payout100\").innerHTML = payout100.toFixed(0).toLocaleString(\"en-US\")+ \"%\";\r\n\r\n};\r\n\r\nconst displayPumpInfo = (data, selectedOption) => {\r\n  let wellInfo = data.find(i => i[\"Well Name\"] === selectedOption);\r\n  if (wellInfo !== undefined) {\r\n    if (\r\n      wellInfo[\"SPM\"] !== 0\r\n    ) {\r\n      //USED jQuery LIBRARY TO TOGGLE THE DISPLAY OF #pumpInfo\r\n      $(document).ready(function () {\r\n        $(\"#pumpInfo\").toggle();\r\n        document.getElementById(\"c\").innerHTML = `C: ${wellInfo[\"C\"]}`;\r\n        document.getElementById(\"SPM\").innerHTML = `SPM: ${wellInfo[\"SPM\"]}`;\r\n        document.getElementById(\"DHSL\").innerHTML = `DH SL: ${wellInfo[\"DH SL\"]}`;\r\n        document.getElementById(\"ideal\").innerHTML = `Ideal bfpd: ${wellInfo[\"Ideal bfpd\"]}`;\r\n        document.getElementById(\"pumpEff\").innerHTML = `Pump Eff: ${wellInfo[\"Pump Eff\"] * 100}`;\r\n        document.getElementById(\"pumpDepth\").innerHTML = `Pump Depth: ${wellInfo[\"Pump Depth\"]}`;\r\n        document.getElementById(\"GFLAP\").innerHTML = `GFLAP: ${wellInfo[\"GFLAP\"]}`;\r\n        document.getElementById(\"Inc\").innerHTML = `Inc: ${wellInfo[\"Inc\"]}`;\r\n      });\r\n    } else {\r\n      $(document).ready(function () {\r\n        $(\"#notPumpingInfo\").toggle();\r\n        $(\"#notPumping\").html(\"This well is not pumping\");\r\n      });\r\n    }\r\n  } else {\r\n    $(document).ready(function () {\r\n      $(\"#notPumpingInfo\").toggle();\r\n      $(\"#notPumping\").html(\"No pump data available\");\r\n    });\r\n  };\r\n};\r\n\r\nconst displayCumlData = (data, selectedOption) => {\r\n  let selectedWell = {\r\n    cuml: 0,\r\n    gasCuml: 0,\r\n    waterCuml: 0,\r\n    formation: \"\"\r\n  };\r\n\r\n  data.forEach(well => {\r\n    if (selectedOption === well[0]) {\r\n      selectedWell.cuml = well[1];\r\n      selectedWell.gasCuml = well[3];\r\n      selectedWell.waterCuml = well[2];\r\n      selectedWell.formation = well[4];\r\n    }\r\n  });\r\n\r\n  const formationEl = document.getElementById(\"formation\");\r\n  const cumulativeDataEl = document.getElementById(\"cumlativeData\");\r\n\r\n  if (!selectedWell.formation) {\r\n    document.getElementById(\"filler4\").style.display = \"\";\r\n  }\r\n\r\n  formationEl.innerHTML = selectedWell.formation;\r\n  cumulativeDataEl.innerHTML = `Cumulative: ${selectedWell.cuml} MBO, ${selectedWell.gasCuml} MMCF, ${selectedWell.waterCuml} MBW`;\r\n\r\n};\r\n\r\nconst getSelectedOption = (data) => {\r\n  let selectedOption = null;\r\n  let menuNode = (0,d3__WEBPACK_IMPORTED_MODULE_0__.select)(\"#siteSelection\").node().value;\r\n\r\n  if (menuNode != \"default\") {\r\n    selectedOption = [menuNode];\r\n  } else if (sessionStorage.getItem(\"siteSelection\") != null) {\r\n    selectedOption = [sessionStorage.getItem(\"siteSelection\")];\r\n    sessionStorage.removeItem(\"siteSelection\");\r\n  } else selectedOption = [...data[0][0]];\r\n\r\n  return selectedOption.join('');\r\n};\r\n\r\nconst curve = (timeFrame, data) => {\r\n  const selectedOption = getSelectedOption(data.prodData);\r\n\r\n  let region = sessionStorage.getItem(\"region\");\r\n  if (region == null) {\r\n    sessionStorage.setItem('region', 'st')\r\n    region = 'st'\r\n  };\r\n\r\n  if (region != \"et\") {\r\n    displayEconomics(data.economicsData, selectedOption);\r\n    displayPayout(data.payoutData, selectedOption);\r\n    displayPumpInfo(data.pumpData, selectedOption);\r\n\r\n    // Hide previous pumping info\r\n    document.getElementById(\"pumpInfo\").style.display = \"none\";\r\n    document.getElementById(\"notPumpingInfo\").style.display = \"none\";\r\n\r\n    // Clear pump info text for next selection\r\n    [\"c\", \"SPM\", \"DHSL\", \"ideal\", \"pumpEff\", \"pumpDepth\", \"GFLAP\", \"Inc\", \"notPumping\"].forEach(id => {\r\n      document.getElementById(id).innerHTML = \"\";\r\n    });\r\n  };\r\n  displayCumlData(data.dataCuml, selectedOption);\r\n\r\n  document.getElementById(\"zoomEl\").style.visibility = \"hidden\"; //dont display old zoom data if switching b/t wells/timeframes\r\n  document.getElementById(\"wellName\").innerHTML = selectedOption;\r\n  document.getElementById(\"individualTable\").style.display = \"none\";\r\n\r\n  ['oilDeclineCurve', 'gasDeclineCurve', 'waterDeclineCurve', 'waterCutCurve', 'totalFluidCurve', 'combinationCurves'].forEach(id => {\r\n    document.getElementById(id).style.display = 'block';\r\n  });\r\n  // console.log(data.prodData)\r\n  const site_data = data.prodData.filter(site => site[0] === selectedOption);\r\n  let site_date = site_data.map(site => site[9]);\r\n  let site_oil = site_data.map(site => site[2]);\r\n  let site_gas = site_data.map(site => site[3]);\r\n  let site_water = site_data.map(site => site[4]);\r\n  let comments = site_data.map(site => site[7]);\r\n  let movingAverage = site_data.map(site => site[8]);\r\n  let water_cut = site_water.map((water, i) => (water / (water + site_oil[i])) * 100);\r\n  let total_fluid = site_oil.map((oil, index) => oil + site_water[index]);\r\n  if (timeFrame > 0) [site_date, site_oil, site_gas, site_water, comments, movingAverage] =\r\n    [site_date, site_oil, site_gas, site_water, comments, movingAverage].map(arr => arr.slice(0, timeFrame));\r\n\r\n  const traceOil = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(\r\n    site_date,\r\n    site_oil,\r\n    \"Oil\",\r\n    null,\r\n    \"green\",\r\n    null,\r\n    comments\r\n  );\r\n\r\n  const traceOilAvg = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(\r\n    site_date,\r\n    movingAverage,\r\n    \"7 Day Avg\",\r\n    \"line\",\r\n    null,\r\n    \"dot\"\r\n  );\r\n\r\n  const traceGas = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(\r\n    site_date,\r\n    site_gas,\r\n    \"Gas [Mcf]\",\r\n    \"line\",\r\n    \"red\");\r\n\r\n  const traceWater = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(\r\n    site_date,\r\n    site_water,\r\n    \"Water [Mbw]\",\r\n    \"line\",\r\n    \"blue\",\r\n  );\r\n\r\n  const traceCut = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(\r\n    site_date,\r\n    water_cut,\r\n    // \"Water [Mbw]\",\r\n    \"line\",\r\n    \"#25C4DC\"\r\n  );\r\n\r\n  const traceFluid = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(\r\n    site_date,\r\n    total_fluid,\r\n    \"Total Fluid [Mb]\",\r\n    \"line\",\r\n    \"black\"\r\n  );\r\n\r\n  // Copied traces with 8th paramater, [visibility = true/'legendonly'], for combined production line graph\r\n  const traceOil2 = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(site_date, site_oil, \"Oil [MBO]\", null, \"green\", null, comments, true);\r\n  const traceWater2 = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(site_date, site_water, \"Water [MBW]\", \"line\", \"blue\", null, null, 'legendonly');\r\n  const traceGas2 = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(site_date, site_gas, \"Gas [MCF]\", \"line\", \"red\", null, null, 'legendonly');\r\n  const traceFluid2 = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeTrace)(site_date, total_fluid, \"Total Fluid [MB]\", \"line\", \"black\", null, null, 'legendonly');\r\n\r\n  const scale = (document.getElementById(\"logarithmic\").classList.contains(\"active\")) ? 'log' : 'linear';\r\n\r\n  // const layoutCut = makeLayout(\"Water Cut Percentage\");\r\n\r\n  const plotContainers = [\"oilDeclineCurve\", \"gasDeclineCurve\", \"waterDeclineCurve\", 'totalFluidCurve', 'waterCutCurve', 'combinationCurves'];\r\n  \r\n  const combination = [traceGas2, traceOil2, traceWater2, traceFluid2];\r\n\r\n  const traceArrays = [\r\n    [traceOil, traceOilAvg],\r\n    [traceGas],\r\n    [traceWater],\r\n    [traceFluid],\r\n    [traceCut],\r\n    combination\r\n  ];\r\n\r\n  plotContainers.forEach((container, i) => {\r\n    const layout = (0,_layout__WEBPACK_IMPORTED_MODULE_3__.makeLayout)(['Oil vs Time (BOPD)', 'Gas vs Time (MCFD)', 'Water vs Time (BWPD)', 'Total Fluid vs Time (BFPD)', 'Water Cut Percentage', 'Combined Production'][i], scale, \r\n    (scale === 'log') ? [1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, 2000, 3000] : null);\r\n    Plotly.newPlot(container, traceArrays[i], layout, _layout__WEBPACK_IMPORTED_MODULE_3__.config);\r\n  });\r\n\r\n  const combo = document.getElementById('combinationCurves');\r\n  combo.on(\"plotly_relayout\", function (eventData) {\r\n    JSON.stringify(eventData);\r\n    const zoomEL = document.getElementById(\"zoomEl\");\r\n    zoomEL.innerHTML = '';\r\n    const p = document.createElement('p');\r\n    p.textContent = `Produced:`;\r\n    zoomEL.appendChild(p);\r\n\r\n    let { \"xaxis.range[0]\": xRangeStart, \"xaxis.range[1]\": xRangeEnd } = eventData;\r\n    if (!xRangeStart) { // if double-clicked\r\n      xRangeStart = site_date[site_date.length - 1];\r\n      xRangeEnd = site_date[0];\r\n    }\r\n    const xStart = xRangeStart.substring(0, 10);\r\n    const xEnd = xRangeEnd.substring(0, 10);\r\n\r\n    const startIdx = site_date.indexOf(`${xStart}T00:00:00.000Z`);\r\n    const endIdx = site_date.indexOf(`${xEnd}T00:00:00.000Z`);\r\n\r\n    if (startIdx === -1) { // zoomed where no data\r\n      return;\r\n    }\r\n    const visible_traces = JSON.parse(sessionStorage.getItem('visible_traces'));\r\n    const map = {'Gas [MCF]': site_gas, 'Oil [MBO]': site_oil, 'Water [MBW]': site_water, 'Total Fluid [MB]': total_fluid };\r\n\r\n    for (const[key,vals] of Object.entries(visible_traces)){\r\n      for (let val of vals){\r\n        const data = map[val];\r\n        const sum = (data.slice(endIdx, startIdx + 1).reduce((acc, cur) => acc + cur, 0)/1000).toFixed(1);\r\n\r\n        let chop = -5;\r\n        if (val == 'Total Fluid [Mb]') chop = -4; \r\n        const unit = val.slice(chop);\r\n        let name = val.slice(0, chop);\r\n        if (val == 'Total Fluid [Mb]') name = `${name} `; \r\n\r\n        const p = document.createElement('p');\r\n        p.textContent = `${name}: ${sum} ${unit}`;\r\n        p.style.fontSize = '15px';\r\n        zoomEL.appendChild(p);\r\n      }\r\n    }\r\n    zoomEL.style.visibility = \"visible\";\r\n  });\r\n\r\n  combo.on('plotly_legendclick', function(data) {\r\n    const traceIdx = data.curveNumber;\r\n    const name = combination[traceIdx].name;\r\n    let currVisible = JSON.parse(sessionStorage.visible_traces) || {\"visible_traces\": []};\r\n\r\n    if (currVisible.visible.includes(name)){\r\n      currVisible.visible = currVisible.visible.filter(el => el !== name)\r\n    }else{\r\n      currVisible.visible.push(name);\r\n    }\r\n\r\n    sessionStorage.setItem('visible_traces', JSON.stringify(currVisible));\r\n  })\r\n\r\n  document.getElementById(\"siteSelection\").focus();\r\n  document.getElementById(\"filler4\").style.display = \"none\";\r\n};\r\n\r\nconst table = (coreData) => {\r\n  const data = coreData.map(el => ([...el]))\r\n  const selectedOption = getSelectedOption(data);\r\n  const well = data.filter(i => i[0] == selectedOption);\r\n\r\n  well.forEach(w => {\r\n    w.shift();\r\n    for (let i = 0; i < 2; i++) w.pop();\r\n  });\r\n  _data__WEBPACK_IMPORTED_MODULE_4__.buildTable(well);\r\n\r\n  document.getElementById('individualTable').style.display = 'inline-block';\r\n  ['oilDeclineCurve', 'gasDeclineCurve', 'waterDeclineCurve', 'waterCutCurve', 'totalFluidCurve', 'combinationCurves'].forEach(tag => {\r\n    document.getElementById(tag).style.display = 'none'\r\n  });\r\n};\r\n\r\nconst switchActives = (event) => {\r\n  event.preventDefault();\r\n\r\n  const target = event.target;\r\n  const parent = document.getElementById(target.id).parentNode;\r\n  const children = parent.querySelectorAll(\"*\");\r\n  \r\n  children.forEach(child => {\r\n    child.classList.remove(\"active\");\r\n  });\r\n  \r\n  target.className += \"active\";\r\n  const activeTime = document.getElementById(\"timeframes\").querySelectorAll(\".active\")[0].id.substring(4);//gives the number from the active view id\r\n  console.log('activeTime :>> ', activeTime);\r\n  curve(Number(activeTime) + 1, curveInfo);\r\n};\r\n\r\n\r\n//Main//\r\nconst currUid = localStorage.getItem('uid');\r\nlet region = sessionStorage.getItem('region');\r\nconsole.log('currUid :>> ', currUid);\r\n\r\nlet prodData = _data__WEBPACK_IMPORTED_MODULE_4__.dataST;\r\nlet cumlData = _data__WEBPACK_IMPORTED_MODULE_4__.dataCuml;\r\n\r\nif (region == \"et\") {\r\n  prodData = _data__WEBPACK_IMPORTED_MODULE_4__.dataET\r\n  cumlData = _data__WEBPACK_IMPORTED_MODULE_4__.dataCumlET\r\n};\r\n\r\nconst curveInfo = {\r\n  prodData: prodData,\r\n  dataCuml: cumlData,\r\n  economicsData: _data__WEBPACK_IMPORTED_MODULE_4__.econ,\r\n  payoutData: _data__WEBPACK_IMPORTED_MODULE_4__.payout,\r\n  pumpData: _data__WEBPACK_IMPORTED_MODULE_4__.pump\r\n};\r\nconsole.log('curveInfo :>> ', curveInfo.prodData);\r\n\r\n['linear','logarithmic','DaysInception','Days30','Days365','Days180'].forEach(el => {\r\n  document.getElementById(el).addEventListener('click',switchActives);\r\n});\r\n\r\nconst dropdownId = '#siteSelection';\r\n_data__WEBPACK_IMPORTED_MODULE_4__.dropdown(dropdownId);\r\n\r\n(0,d3__WEBPACK_IMPORTED_MODULE_0__.select)(dropdownId).on(\"change\", () => {\r\n  curve(localStorage.getItem('initTime'), curveInfo);\r\n});\r\n\r\ndocument.getElementById(\"table\").addEventListener('click', () => {\r\n  if ((0,_ui__WEBPACK_IMPORTED_MODULE_5__.checkActive)('table') === true) return;\r\n  (0,_ui__WEBPACK_IMPORTED_MODULE_5__.setActive)(\"table\", 'DaysInception');\r\n  table(prodData);\r\n});\r\n\r\n//store currently visible plots in sessionstorage to access in relayout event; init to only oil(page load)\r\nlet currVisible = {\"visible\":[\"Oil [MBO]\"]};\r\nsessionStorage.setItem(\"visible_traces\",JSON.stringify(currVisible));\r\n\r\n//init page on load//\r\nwindow.onload = function () {\r\n  let activeTime = 'DaysInception';\r\n  if (localStorage.getItem('initTime') == 31) activeTime = 'Days30';\r\n  (0,_ui__WEBPACK_IMPORTED_MODULE_5__.setActiveTime)(activeTime);\r\n  (0,_ui__WEBPACK_IMPORTED_MODULE_5__.setActiveView)(localStorage.getItem('initScale'));\r\n  curve(localStorage.getItem('initTime'), curveInfo);\r\n}();\r\n\r\n\r\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QTtBQUNBLE1BQU0sZ0RBQVc7QUFDakIsRUFBRSw4Q0FBUztBQUNYO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsK0VBQStFO0FBQy9FLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLGtEQUFhO0FBQ2YsRUFBRSxrREFBYTtBQUNmO0FBQ0EsQ0FBQztBQUNEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9kLTEvLi9zcmMvanMvY3VydmVzLmpzPzE3MDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZGggZnJvbSAnLi9kYXRhJ1xyXG5pbXBvcnQgeyBtb25pdG9yUmVnaW9uIH0gZnJvbSAnLi9yZWdpb24nXHJcbmltcG9ydCB7IG1vbml0b3JBdXRoU3RhdGUgfSBmcm9tICcuL2luZGV4J1xyXG5pbXBvcnQgeyBzZWxlY3QgfSBmcm9tICdkMyc7XHJcbmltcG9ydCB7IG1ha2VUcmFjZSwgbWFrZUxheW91dCwgY29uZmlnIH0gZnJvbSAnLi9sYXlvdXQnO1xyXG5pbXBvcnQgeyBzZXRBY3RpdmUsIHNldEFjdGl2ZVZpZXcsIHRvZ2dsZUluaXRUaW1lLCB0b2dnbGVJbml0U2NhbGUsIGNoZWNrQWN0aXZlLCBzZXRBY3RpdmVUaW1lIH0gZnJvbSAnLi91aSc7XHJcblxyXG5tb25pdG9yQXV0aFN0YXRlKCk7XHJcbm1vbml0b3JSZWdpb24oKTtcclxuXHJcbmNvbnN0IGRpc3BsYXlFY29ub21pY3MgPSAoZGF0YSwgc2VsZWN0ZWRPcHRpb24pID0+IHtcclxuICBsZXQgd2VsbFJNUEwgPSAwO1xyXG4gIGxldCB3ZWxsWVREUEwgPSAwO1xyXG4gIGxldCBtb250aFBuTCA9IFwiXCI7XHJcblxyXG4gIGRhdGEuZm9yRWFjaCgoZWNvV2VsbCkgPT4ge1xyXG4gICAgaWYgKGVjb1dlbGxbXCJXZWxsIE5hbWVcIl0uaW5jbHVkZXMoc2VsZWN0ZWRPcHRpb24pKSB7XHJcbiAgICAgIHdlbGxSTVBMID0gZWNvV2VsbFtcIlJlY2VudCBNb250aCBQJkxcIl07XHJcbiAgICAgIHdlbGxZVERQTCA9IGVjb1dlbGxbXCJZVEQgUCZMXCJdO1xyXG4gICAgICBtb250aFBuTCA9IGVjb1dlbGxbXCJEYXRlXCJdLnNsaWNlKDAsIDMpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicG5sXCIpLmlubmVySFRNTCA9IGBQJkwgOiAkJHt3ZWxsUk1QTC50b0ZpeGVkKDApLnRvU3RyaW5nKCkucmVwbGFjZSgvXFxCKD89KFxcZHszfSkrKD8hXFxkKSkvZywgXCIsXCIpfSAke21vbnRoUG5MfWA7XHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJZVERcIikuaW5uZXJIVE1MID0gYCQke3dlbGxZVERQTC50b0ZpeGVkKDApLnRvU3RyaW5nKCkucmVwbGFjZSgvXFxCKD89KFxcZHszfSkrKD8hXFxkKSkvZywgXCIsXCIpfSBZVERgO1xyXG59O1xyXG5cclxuY29uc3QgZGlzcGxheVBheW91dCA9IChkYXRhLCBzZWxlY3RlZE9wdGlvbikgPT4ge1xyXG4gIHZhciBwYXlvdXQxMDAgPSAwO1xyXG4gIGRhdGEuZm9yRWFjaCgocGF5b3V0V2VsbCkgPT4ge1xyXG4gICAgaWYgKHBheW91dFdlbGxbXCJXZWxsIE5hbWVcIl0uaW5jbHVkZXMoc2VsZWN0ZWRPcHRpb24pKSB7XHJcbiAgICAgIHBheW91dDEwMCA9IHBheW91dFdlbGxbXCIlIFBheW91dFwiXSAqIDEwMDtcclxuICAgIH1cclxuICB9KTtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBheW91dFwiKS5pbm5lckhUTUwgPVxyXG4gICAgXCJQYXlvdXQgOiBcIiArIHBheW91dDEwMC50b0ZpeGVkKDApLnRvTG9jYWxlU3RyaW5nKFwiZW4tVVNcIikgKyBcIiVcIjtcclxuICAvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGF5b3V0MTAwXCIpLmlubmVySFRNTCA9IHBheW91dDEwMC50b0ZpeGVkKDApLnRvTG9jYWxlU3RyaW5nKFwiZW4tVVNcIikrIFwiJVwiO1xyXG5cclxufTtcclxuXHJcbmNvbnN0IGRpc3BsYXlQdW1wSW5mbyA9IChkYXRhLCBzZWxlY3RlZE9wdGlvbikgPT4ge1xyXG4gIGxldCB3ZWxsSW5mbyA9IGRhdGEuZmluZChpID0+IGlbXCJXZWxsIE5hbWVcIl0gPT09IHNlbGVjdGVkT3B0aW9uKTtcclxuICBpZiAod2VsbEluZm8gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgaWYgKFxyXG4gICAgICB3ZWxsSW5mb1tcIlNQTVwiXSAhPT0gMFxyXG4gICAgKSB7XHJcbiAgICAgIC8vVVNFRCBqUXVlcnkgTElCUkFSWSBUTyBUT0dHTEUgVEhFIERJU1BMQVkgT0YgI3B1bXBJbmZvXHJcbiAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKFwiI3B1bXBJbmZvXCIpLnRvZ2dsZSgpO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY1wiKS5pbm5lckhUTUwgPSBgQzogJHt3ZWxsSW5mb1tcIkNcIl19YDtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlNQTVwiKS5pbm5lckhUTUwgPSBgU1BNOiAke3dlbGxJbmZvW1wiU1BNXCJdfWA7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJESFNMXCIpLmlubmVySFRNTCA9IGBESCBTTDogJHt3ZWxsSW5mb1tcIkRIIFNMXCJdfWA7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpZGVhbFwiKS5pbm5lckhUTUwgPSBgSWRlYWwgYmZwZDogJHt3ZWxsSW5mb1tcIklkZWFsIGJmcGRcIl19YDtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInB1bXBFZmZcIikuaW5uZXJIVE1MID0gYFB1bXAgRWZmOiAke3dlbGxJbmZvW1wiUHVtcCBFZmZcIl0gKiAxMDB9YDtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInB1bXBEZXB0aFwiKS5pbm5lckhUTUwgPSBgUHVtcCBEZXB0aDogJHt3ZWxsSW5mb1tcIlB1bXAgRGVwdGhcIl19YDtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIkdGTEFQXCIpLmlubmVySFRNTCA9IGBHRkxBUDogJHt3ZWxsSW5mb1tcIkdGTEFQXCJdfWA7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJJbmNcIikuaW5uZXJIVE1MID0gYEluYzogJHt3ZWxsSW5mb1tcIkluY1wiXX1gO1xyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKFwiI25vdFB1bXBpbmdJbmZvXCIpLnRvZ2dsZSgpO1xyXG4gICAgICAgICQoXCIjbm90UHVtcGluZ1wiKS5odG1sKFwiVGhpcyB3ZWxsIGlzIG5vdCBwdW1waW5nXCIpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAkKFwiI25vdFB1bXBpbmdJbmZvXCIpLnRvZ2dsZSgpO1xyXG4gICAgICAkKFwiI25vdFB1bXBpbmdcIikuaHRtbChcIk5vIHB1bXAgZGF0YSBhdmFpbGFibGVcIik7XHJcbiAgICB9KTtcclxuICB9O1xyXG59O1xyXG5cclxuY29uc3QgZGlzcGxheUN1bWxEYXRhID0gKGRhdGEsIHNlbGVjdGVkT3B0aW9uKSA9PiB7XHJcbiAgbGV0IHNlbGVjdGVkV2VsbCA9IHtcclxuICAgIGN1bWw6IDAsXHJcbiAgICBnYXNDdW1sOiAwLFxyXG4gICAgd2F0ZXJDdW1sOiAwLFxyXG4gICAgZm9ybWF0aW9uOiBcIlwiXHJcbiAgfTtcclxuXHJcbiAgZGF0YS5mb3JFYWNoKHdlbGwgPT4ge1xyXG4gICAgaWYgKHNlbGVjdGVkT3B0aW9uID09PSB3ZWxsWzBdKSB7XHJcbiAgICAgIHNlbGVjdGVkV2VsbC5jdW1sID0gd2VsbFsxXTtcclxuICAgICAgc2VsZWN0ZWRXZWxsLmdhc0N1bWwgPSB3ZWxsWzNdO1xyXG4gICAgICBzZWxlY3RlZFdlbGwud2F0ZXJDdW1sID0gd2VsbFsyXTtcclxuICAgICAgc2VsZWN0ZWRXZWxsLmZvcm1hdGlvbiA9IHdlbGxbNF07XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IGZvcm1hdGlvbkVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb3JtYXRpb25cIik7XHJcbiAgY29uc3QgY3VtdWxhdGl2ZURhdGFFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY3VtbGF0aXZlRGF0YVwiKTtcclxuXHJcbiAgaWYgKCFzZWxlY3RlZFdlbGwuZm9ybWF0aW9uKSB7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZpbGxlcjRcIikuc3R5bGUuZGlzcGxheSA9IFwiXCI7XHJcbiAgfVxyXG5cclxuICBmb3JtYXRpb25FbC5pbm5lckhUTUwgPSBzZWxlY3RlZFdlbGwuZm9ybWF0aW9uO1xyXG4gIGN1bXVsYXRpdmVEYXRhRWwuaW5uZXJIVE1MID0gYEN1bXVsYXRpdmU6ICR7c2VsZWN0ZWRXZWxsLmN1bWx9IE1CTywgJHtzZWxlY3RlZFdlbGwuZ2FzQ3VtbH0gTU1DRiwgJHtzZWxlY3RlZFdlbGwud2F0ZXJDdW1sfSBNQldgO1xyXG5cclxufTtcclxuXHJcbmNvbnN0IGdldFNlbGVjdGVkT3B0aW9uID0gKGRhdGEpID0+IHtcclxuICBsZXQgc2VsZWN0ZWRPcHRpb24gPSBudWxsO1xyXG4gIGxldCBtZW51Tm9kZSA9IHNlbGVjdChcIiNzaXRlU2VsZWN0aW9uXCIpLm5vZGUoKS52YWx1ZTtcclxuXHJcbiAgaWYgKG1lbnVOb2RlICE9IFwiZGVmYXVsdFwiKSB7XHJcbiAgICBzZWxlY3RlZE9wdGlvbiA9IFttZW51Tm9kZV07XHJcbiAgfSBlbHNlIGlmIChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwic2l0ZVNlbGVjdGlvblwiKSAhPSBudWxsKSB7XHJcbiAgICBzZWxlY3RlZE9wdGlvbiA9IFtzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwic2l0ZVNlbGVjdGlvblwiKV07XHJcbiAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKFwic2l0ZVNlbGVjdGlvblwiKTtcclxuICB9IGVsc2Ugc2VsZWN0ZWRPcHRpb24gPSBbLi4uZGF0YVswXVswXV07XHJcblxyXG4gIHJldHVybiBzZWxlY3RlZE9wdGlvbi5qb2luKCcnKTtcclxufTtcclxuXHJcbmNvbnN0IGN1cnZlID0gKHRpbWVGcmFtZSwgZGF0YSkgPT4ge1xyXG4gIGNvbnN0IHNlbGVjdGVkT3B0aW9uID0gZ2V0U2VsZWN0ZWRPcHRpb24oZGF0YS5wcm9kRGF0YSk7XHJcblxyXG4gIGxldCByZWdpb24gPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwicmVnaW9uXCIpO1xyXG4gIGlmIChyZWdpb24gPT0gbnVsbCkge1xyXG4gICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgncmVnaW9uJywgJ3N0JylcclxuICAgIHJlZ2lvbiA9ICdzdCdcclxuICB9O1xyXG5cclxuICBpZiAocmVnaW9uICE9IFwiZXRcIikge1xyXG4gICAgZGlzcGxheUVjb25vbWljcyhkYXRhLmVjb25vbWljc0RhdGEsIHNlbGVjdGVkT3B0aW9uKTtcclxuICAgIGRpc3BsYXlQYXlvdXQoZGF0YS5wYXlvdXREYXRhLCBzZWxlY3RlZE9wdGlvbik7XHJcbiAgICBkaXNwbGF5UHVtcEluZm8oZGF0YS5wdW1wRGF0YSwgc2VsZWN0ZWRPcHRpb24pO1xyXG5cclxuICAgIC8vIEhpZGUgcHJldmlvdXMgcHVtcGluZyBpbmZvXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInB1bXBJbmZvXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibm90UHVtcGluZ0luZm9cIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG5cclxuICAgIC8vIENsZWFyIHB1bXAgaW5mbyB0ZXh0IGZvciBuZXh0IHNlbGVjdGlvblxyXG4gICAgW1wiY1wiLCBcIlNQTVwiLCBcIkRIU0xcIiwgXCJpZGVhbFwiLCBcInB1bXBFZmZcIiwgXCJwdW1wRGVwdGhcIiwgXCJHRkxBUFwiLCBcIkluY1wiLCBcIm5vdFB1bXBpbmdcIl0uZm9yRWFjaChpZCA9PiB7XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKS5pbm5lckhUTUwgPSBcIlwiO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuICBkaXNwbGF5Q3VtbERhdGEoZGF0YS5kYXRhQ3VtbCwgc2VsZWN0ZWRPcHRpb24pO1xyXG5cclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInpvb21FbFwiKS5zdHlsZS52aXNpYmlsaXR5ID0gXCJoaWRkZW5cIjsgLy9kb250IGRpc3BsYXkgb2xkIHpvb20gZGF0YSBpZiBzd2l0Y2hpbmcgYi90IHdlbGxzL3RpbWVmcmFtZXNcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndlbGxOYW1lXCIpLmlubmVySFRNTCA9IHNlbGVjdGVkT3B0aW9uO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW5kaXZpZHVhbFRhYmxlXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuXHJcbiAgWydvaWxEZWNsaW5lQ3VydmUnLCAnZ2FzRGVjbGluZUN1cnZlJywgJ3dhdGVyRGVjbGluZUN1cnZlJywgJ3dhdGVyQ3V0Q3VydmUnLCAndG90YWxGbHVpZEN1cnZlJywgJ2NvbWJpbmF0aW9uQ3VydmVzJ10uZm9yRWFjaChpZCA9PiB7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgfSk7XHJcbiAgLy8gY29uc29sZS5sb2coZGF0YS5wcm9kRGF0YSlcclxuICBjb25zdCBzaXRlX2RhdGEgPSBkYXRhLnByb2REYXRhLmZpbHRlcihzaXRlID0+IHNpdGVbMF0gPT09IHNlbGVjdGVkT3B0aW9uKTtcclxuICBsZXQgc2l0ZV9kYXRlID0gc2l0ZV9kYXRhLm1hcChzaXRlID0+IHNpdGVbOV0pO1xyXG4gIGxldCBzaXRlX29pbCA9IHNpdGVfZGF0YS5tYXAoc2l0ZSA9PiBzaXRlWzJdKTtcclxuICBsZXQgc2l0ZV9nYXMgPSBzaXRlX2RhdGEubWFwKHNpdGUgPT4gc2l0ZVszXSk7XHJcbiAgbGV0IHNpdGVfd2F0ZXIgPSBzaXRlX2RhdGEubWFwKHNpdGUgPT4gc2l0ZVs0XSk7XHJcbiAgbGV0IGNvbW1lbnRzID0gc2l0ZV9kYXRhLm1hcChzaXRlID0+IHNpdGVbN10pO1xyXG4gIGxldCBtb3ZpbmdBdmVyYWdlID0gc2l0ZV9kYXRhLm1hcChzaXRlID0+IHNpdGVbOF0pO1xyXG4gIGxldCB3YXRlcl9jdXQgPSBzaXRlX3dhdGVyLm1hcCgod2F0ZXIsIGkpID0+ICh3YXRlciAvICh3YXRlciArIHNpdGVfb2lsW2ldKSkgKiAxMDApO1xyXG4gIGxldCB0b3RhbF9mbHVpZCA9IHNpdGVfb2lsLm1hcCgob2lsLCBpbmRleCkgPT4gb2lsICsgc2l0ZV93YXRlcltpbmRleF0pO1xyXG4gIGlmICh0aW1lRnJhbWUgPiAwKSBbc2l0ZV9kYXRlLCBzaXRlX29pbCwgc2l0ZV9nYXMsIHNpdGVfd2F0ZXIsIGNvbW1lbnRzLCBtb3ZpbmdBdmVyYWdlXSA9XHJcbiAgICBbc2l0ZV9kYXRlLCBzaXRlX29pbCwgc2l0ZV9nYXMsIHNpdGVfd2F0ZXIsIGNvbW1lbnRzLCBtb3ZpbmdBdmVyYWdlXS5tYXAoYXJyID0+IGFyci5zbGljZSgwLCB0aW1lRnJhbWUpKTtcclxuXHJcbiAgY29uc3QgdHJhY2VPaWwgPSBtYWtlVHJhY2UoXHJcbiAgICBzaXRlX2RhdGUsXHJcbiAgICBzaXRlX29pbCxcclxuICAgIFwiT2lsXCIsXHJcbiAgICBudWxsLFxyXG4gICAgXCJncmVlblwiLFxyXG4gICAgbnVsbCxcclxuICAgIGNvbW1lbnRzXHJcbiAgKTtcclxuXHJcbiAgY29uc3QgdHJhY2VPaWxBdmcgPSBtYWtlVHJhY2UoXHJcbiAgICBzaXRlX2RhdGUsXHJcbiAgICBtb3ZpbmdBdmVyYWdlLFxyXG4gICAgXCI3IERheSBBdmdcIixcclxuICAgIFwibGluZVwiLFxyXG4gICAgbnVsbCxcclxuICAgIFwiZG90XCJcclxuICApO1xyXG5cclxuICBjb25zdCB0cmFjZUdhcyA9IG1ha2VUcmFjZShcclxuICAgIHNpdGVfZGF0ZSxcclxuICAgIHNpdGVfZ2FzLFxyXG4gICAgXCJHYXMgW01jZl1cIixcclxuICAgIFwibGluZVwiLFxyXG4gICAgXCJyZWRcIik7XHJcblxyXG4gIGNvbnN0IHRyYWNlV2F0ZXIgPSBtYWtlVHJhY2UoXHJcbiAgICBzaXRlX2RhdGUsXHJcbiAgICBzaXRlX3dhdGVyLFxyXG4gICAgXCJXYXRlciBbTWJ3XVwiLFxyXG4gICAgXCJsaW5lXCIsXHJcbiAgICBcImJsdWVcIixcclxuICApO1xyXG5cclxuICBjb25zdCB0cmFjZUN1dCA9IG1ha2VUcmFjZShcclxuICAgIHNpdGVfZGF0ZSxcclxuICAgIHdhdGVyX2N1dCxcclxuICAgIC8vIFwiV2F0ZXIgW01id11cIixcclxuICAgIFwibGluZVwiLFxyXG4gICAgXCIjMjVDNERDXCJcclxuICApO1xyXG5cclxuICBjb25zdCB0cmFjZUZsdWlkID0gbWFrZVRyYWNlKFxyXG4gICAgc2l0ZV9kYXRlLFxyXG4gICAgdG90YWxfZmx1aWQsXHJcbiAgICBcIlRvdGFsIEZsdWlkIFtNYl1cIixcclxuICAgIFwibGluZVwiLFxyXG4gICAgXCJibGFja1wiXHJcbiAgKTtcclxuXHJcbiAgLy8gQ29waWVkIHRyYWNlcyB3aXRoIDh0aCBwYXJhbWF0ZXIsIFt2aXNpYmlsaXR5ID0gdHJ1ZS8nbGVnZW5kb25seSddLCBmb3IgY29tYmluZWQgcHJvZHVjdGlvbiBsaW5lIGdyYXBoXHJcbiAgY29uc3QgdHJhY2VPaWwyID0gbWFrZVRyYWNlKHNpdGVfZGF0ZSwgc2l0ZV9vaWwsIFwiT2lsIFtNQk9dXCIsIG51bGwsIFwiZ3JlZW5cIiwgbnVsbCwgY29tbWVudHMsIHRydWUpO1xyXG4gIGNvbnN0IHRyYWNlV2F0ZXIyID0gbWFrZVRyYWNlKHNpdGVfZGF0ZSwgc2l0ZV93YXRlciwgXCJXYXRlciBbTUJXXVwiLCBcImxpbmVcIiwgXCJibHVlXCIsIG51bGwsIG51bGwsICdsZWdlbmRvbmx5Jyk7XHJcbiAgY29uc3QgdHJhY2VHYXMyID0gbWFrZVRyYWNlKHNpdGVfZGF0ZSwgc2l0ZV9nYXMsIFwiR2FzIFtNQ0ZdXCIsIFwibGluZVwiLCBcInJlZFwiLCBudWxsLCBudWxsLCAnbGVnZW5kb25seScpO1xyXG4gIGNvbnN0IHRyYWNlRmx1aWQyID0gbWFrZVRyYWNlKHNpdGVfZGF0ZSwgdG90YWxfZmx1aWQsIFwiVG90YWwgRmx1aWQgW01CXVwiLCBcImxpbmVcIiwgXCJibGFja1wiLCBudWxsLCBudWxsLCAnbGVnZW5kb25seScpO1xyXG5cclxuICBjb25zdCBzY2FsZSA9IChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvZ2FyaXRobWljXCIpLmNsYXNzTGlzdC5jb250YWlucyhcImFjdGl2ZVwiKSkgPyAnbG9nJyA6ICdsaW5lYXInO1xyXG5cclxuICAvLyBjb25zdCBsYXlvdXRDdXQgPSBtYWtlTGF5b3V0KFwiV2F0ZXIgQ3V0IFBlcmNlbnRhZ2VcIik7XHJcblxyXG4gIGNvbnN0IHBsb3RDb250YWluZXJzID0gW1wib2lsRGVjbGluZUN1cnZlXCIsIFwiZ2FzRGVjbGluZUN1cnZlXCIsIFwid2F0ZXJEZWNsaW5lQ3VydmVcIiwgJ3RvdGFsRmx1aWRDdXJ2ZScsICd3YXRlckN1dEN1cnZlJywgJ2NvbWJpbmF0aW9uQ3VydmVzJ107XHJcbiAgXHJcbiAgY29uc3QgY29tYmluYXRpb24gPSBbdHJhY2VHYXMyLCB0cmFjZU9pbDIsIHRyYWNlV2F0ZXIyLCB0cmFjZUZsdWlkMl07XHJcblxyXG4gIGNvbnN0IHRyYWNlQXJyYXlzID0gW1xyXG4gICAgW3RyYWNlT2lsLCB0cmFjZU9pbEF2Z10sXHJcbiAgICBbdHJhY2VHYXNdLFxyXG4gICAgW3RyYWNlV2F0ZXJdLFxyXG4gICAgW3RyYWNlRmx1aWRdLFxyXG4gICAgW3RyYWNlQ3V0XSxcclxuICAgIGNvbWJpbmF0aW9uXHJcbiAgXTtcclxuXHJcbiAgcGxvdENvbnRhaW5lcnMuZm9yRWFjaCgoY29udGFpbmVyLCBpKSA9PiB7XHJcbiAgICBjb25zdCBsYXlvdXQgPSBtYWtlTGF5b3V0KFsnT2lsIHZzIFRpbWUgKEJPUEQpJywgJ0dhcyB2cyBUaW1lIChNQ0ZEKScsICdXYXRlciB2cyBUaW1lIChCV1BEKScsICdUb3RhbCBGbHVpZCB2cyBUaW1lIChCRlBEKScsICdXYXRlciBDdXQgUGVyY2VudGFnZScsICdDb21iaW5lZCBQcm9kdWN0aW9uJ11baV0sIHNjYWxlLCBcclxuICAgIChzY2FsZSA9PT0gJ2xvZycpID8gWzEsIDIsIDUsIDEwLCAyMCwgNTAsIDEwMCwgMjAwLCA1MDAsIDEwMDAsIDIwMDAsIDMwMDBdIDogbnVsbCk7XHJcbiAgICBQbG90bHkubmV3UGxvdChjb250YWluZXIsIHRyYWNlQXJyYXlzW2ldLCBsYXlvdXQsIGNvbmZpZyk7XHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IGNvbWJvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbWJpbmF0aW9uQ3VydmVzJyk7XHJcbiAgY29tYm8ub24oXCJwbG90bHlfcmVsYXlvdXRcIiwgZnVuY3Rpb24gKGV2ZW50RGF0YSkge1xyXG4gICAgSlNPTi5zdHJpbmdpZnkoZXZlbnREYXRhKTtcclxuICAgIGNvbnN0IHpvb21FTCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiem9vbUVsXCIpO1xyXG4gICAgem9vbUVMLmlubmVySFRNTCA9ICcnO1xyXG4gICAgY29uc3QgcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgIHAudGV4dENvbnRlbnQgPSBgUHJvZHVjZWQ6YDtcclxuICAgIHpvb21FTC5hcHBlbmRDaGlsZChwKTtcclxuXHJcbiAgICBsZXQgeyBcInhheGlzLnJhbmdlWzBdXCI6IHhSYW5nZVN0YXJ0LCBcInhheGlzLnJhbmdlWzFdXCI6IHhSYW5nZUVuZCB9ID0gZXZlbnREYXRhO1xyXG4gICAgaWYgKCF4UmFuZ2VTdGFydCkgeyAvLyBpZiBkb3VibGUtY2xpY2tlZFxyXG4gICAgICB4UmFuZ2VTdGFydCA9IHNpdGVfZGF0ZVtzaXRlX2RhdGUubGVuZ3RoIC0gMV07XHJcbiAgICAgIHhSYW5nZUVuZCA9IHNpdGVfZGF0ZVswXTtcclxuICAgIH1cclxuICAgIGNvbnN0IHhTdGFydCA9IHhSYW5nZVN0YXJ0LnN1YnN0cmluZygwLCAxMCk7XHJcbiAgICBjb25zdCB4RW5kID0geFJhbmdlRW5kLnN1YnN0cmluZygwLCAxMCk7XHJcblxyXG4gICAgY29uc3Qgc3RhcnRJZHggPSBzaXRlX2RhdGUuaW5kZXhPZihgJHt4U3RhcnR9VDAwOjAwOjAwLjAwMFpgKTtcclxuICAgIGNvbnN0IGVuZElkeCA9IHNpdGVfZGF0ZS5pbmRleE9mKGAke3hFbmR9VDAwOjAwOjAwLjAwMFpgKTtcclxuXHJcbiAgICBpZiAoc3RhcnRJZHggPT09IC0xKSB7IC8vIHpvb21lZCB3aGVyZSBubyBkYXRhXHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGNvbnN0IHZpc2libGVfdHJhY2VzID0gSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd2aXNpYmxlX3RyYWNlcycpKTtcclxuICAgIGNvbnN0IG1hcCA9IHsnR2FzIFtNQ0ZdJzogc2l0ZV9nYXMsICdPaWwgW01CT10nOiBzaXRlX29pbCwgJ1dhdGVyIFtNQlddJzogc2l0ZV93YXRlciwgJ1RvdGFsIEZsdWlkIFtNQl0nOiB0b3RhbF9mbHVpZCB9O1xyXG5cclxuICAgIGZvciAoY29uc3Rba2V5LHZhbHNdIG9mIE9iamVjdC5lbnRyaWVzKHZpc2libGVfdHJhY2VzKSl7XHJcbiAgICAgIGZvciAobGV0IHZhbCBvZiB2YWxzKXtcclxuICAgICAgICBjb25zdCBkYXRhID0gbWFwW3ZhbF07XHJcbiAgICAgICAgY29uc3Qgc3VtID0gKGRhdGEuc2xpY2UoZW5kSWR4LCBzdGFydElkeCArIDEpLnJlZHVjZSgoYWNjLCBjdXIpID0+IGFjYyArIGN1ciwgMCkvMTAwMCkudG9GaXhlZCgxKTtcclxuXHJcbiAgICAgICAgbGV0IGNob3AgPSAtNTtcclxuICAgICAgICBpZiAodmFsID09ICdUb3RhbCBGbHVpZCBbTWJdJykgY2hvcCA9IC00OyBcclxuICAgICAgICBjb25zdCB1bml0ID0gdmFsLnNsaWNlKGNob3ApO1xyXG4gICAgICAgIGxldCBuYW1lID0gdmFsLnNsaWNlKDAsIGNob3ApO1xyXG4gICAgICAgIGlmICh2YWwgPT0gJ1RvdGFsIEZsdWlkIFtNYl0nKSBuYW1lID0gYCR7bmFtZX0gYDsgXHJcblxyXG4gICAgICAgIGNvbnN0IHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICAgICAgcC50ZXh0Q29udGVudCA9IGAke25hbWV9OiAke3N1bX0gJHt1bml0fWA7XHJcbiAgICAgICAgcC5zdHlsZS5mb250U2l6ZSA9ICcxNXB4JztcclxuICAgICAgICB6b29tRUwuYXBwZW5kQ2hpbGQocCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHpvb21FTC5zdHlsZS52aXNpYmlsaXR5ID0gXCJ2aXNpYmxlXCI7XHJcbiAgfSk7XHJcblxyXG4gIGNvbWJvLm9uKCdwbG90bHlfbGVnZW5kY2xpY2snLCBmdW5jdGlvbihkYXRhKSB7XHJcbiAgICBjb25zdCB0cmFjZUlkeCA9IGRhdGEuY3VydmVOdW1iZXI7XHJcbiAgICBjb25zdCBuYW1lID0gY29tYmluYXRpb25bdHJhY2VJZHhdLm5hbWU7XHJcbiAgICBsZXQgY3VyclZpc2libGUgPSBKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLnZpc2libGVfdHJhY2VzKSB8fCB7XCJ2aXNpYmxlX3RyYWNlc1wiOiBbXX07XHJcblxyXG4gICAgaWYgKGN1cnJWaXNpYmxlLnZpc2libGUuaW5jbHVkZXMobmFtZSkpe1xyXG4gICAgICBjdXJyVmlzaWJsZS52aXNpYmxlID0gY3VyclZpc2libGUudmlzaWJsZS5maWx0ZXIoZWwgPT4gZWwgIT09IG5hbWUpXHJcbiAgICB9ZWxzZXtcclxuICAgICAgY3VyclZpc2libGUudmlzaWJsZS5wdXNoKG5hbWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ3Zpc2libGVfdHJhY2VzJywgSlNPTi5zdHJpbmdpZnkoY3VyclZpc2libGUpKTtcclxuICB9KVxyXG5cclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNpdGVTZWxlY3Rpb25cIikuZm9jdXMoKTtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZpbGxlcjRcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG59O1xyXG5cclxuY29uc3QgdGFibGUgPSAoY29yZURhdGEpID0+IHtcclxuICBjb25zdCBkYXRhID0gY29yZURhdGEubWFwKGVsID0+IChbLi4uZWxdKSlcclxuICBjb25zdCBzZWxlY3RlZE9wdGlvbiA9IGdldFNlbGVjdGVkT3B0aW9uKGRhdGEpO1xyXG4gIGNvbnN0IHdlbGwgPSBkYXRhLmZpbHRlcihpID0+IGlbMF0gPT0gc2VsZWN0ZWRPcHRpb24pO1xyXG5cclxuICB3ZWxsLmZvckVhY2godyA9PiB7XHJcbiAgICB3LnNoaWZ0KCk7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDI7IGkrKykgdy5wb3AoKTtcclxuICB9KTtcclxuICBkaC5idWlsZFRhYmxlKHdlbGwpO1xyXG5cclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5kaXZpZHVhbFRhYmxlJykuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xyXG4gIFsnb2lsRGVjbGluZUN1cnZlJywgJ2dhc0RlY2xpbmVDdXJ2ZScsICd3YXRlckRlY2xpbmVDdXJ2ZScsICd3YXRlckN1dEN1cnZlJywgJ3RvdGFsRmx1aWRDdXJ2ZScsICdjb21iaW5hdGlvbkN1cnZlcyddLmZvckVhY2godGFnID0+IHtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRhZykuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xyXG4gIH0pO1xyXG59O1xyXG5cclxuY29uc3Qgc3dpdGNoQWN0aXZlcyA9IChldmVudCkgPT4ge1xyXG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcclxuICBjb25zdCBwYXJlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0YXJnZXQuaWQpLnBhcmVudE5vZGU7XHJcbiAgY29uc3QgY2hpbGRyZW4gPSBwYXJlbnQucXVlcnlTZWxlY3RvckFsbChcIipcIik7XHJcbiAgXHJcbiAgY2hpbGRyZW4uZm9yRWFjaChjaGlsZCA9PiB7XHJcbiAgICBjaGlsZC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gIH0pO1xyXG4gIFxyXG4gIHRhcmdldC5jbGFzc05hbWUgKz0gXCJhY3RpdmVcIjtcclxuICBjb25zdCBhY3RpdmVUaW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aW1lZnJhbWVzXCIpLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuYWN0aXZlXCIpWzBdLmlkLnN1YnN0cmluZyg0KTsvL2dpdmVzIHRoZSBudW1iZXIgZnJvbSB0aGUgYWN0aXZlIHZpZXcgaWRcclxuICBjb25zb2xlLmxvZygnYWN0aXZlVGltZSA6Pj4gJywgYWN0aXZlVGltZSk7XHJcbiAgY3VydmUoTnVtYmVyKGFjdGl2ZVRpbWUpICsgMSwgY3VydmVJbmZvKTtcclxufTtcclxuXHJcblxyXG4vL01haW4vL1xyXG5jb25zdCBjdXJyVWlkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VpZCcpO1xyXG5sZXQgcmVnaW9uID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgncmVnaW9uJyk7XHJcbmNvbnNvbGUubG9nKCdjdXJyVWlkIDo+PiAnLCBjdXJyVWlkKTtcclxuXHJcbmxldCBwcm9kRGF0YSA9IGRoLmRhdGFTVDtcclxubGV0IGN1bWxEYXRhID0gZGguZGF0YUN1bWw7XHJcblxyXG5pZiAocmVnaW9uID09IFwiZXRcIikge1xyXG4gIHByb2REYXRhID0gZGguZGF0YUVUXHJcbiAgY3VtbERhdGEgPSBkaC5kYXRhQ3VtbEVUXHJcbn07XHJcblxyXG5jb25zdCBjdXJ2ZUluZm8gPSB7XHJcbiAgcHJvZERhdGE6IHByb2REYXRhLFxyXG4gIGRhdGFDdW1sOiBjdW1sRGF0YSxcclxuICBlY29ub21pY3NEYXRhOiBkaC5lY29uLFxyXG4gIHBheW91dERhdGE6IGRoLnBheW91dCxcclxuICBwdW1wRGF0YTogZGgucHVtcFxyXG59O1xyXG5jb25zb2xlLmxvZygnY3VydmVJbmZvIDo+PiAnLCBjdXJ2ZUluZm8ucHJvZERhdGEpO1xyXG5cclxuWydsaW5lYXInLCdsb2dhcml0aG1pYycsJ0RheXNJbmNlcHRpb24nLCdEYXlzMzAnLCdEYXlzMzY1JywnRGF5czE4MCddLmZvckVhY2goZWwgPT4ge1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVsKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsc3dpdGNoQWN0aXZlcyk7XHJcbn0pO1xyXG5cclxuY29uc3QgZHJvcGRvd25JZCA9ICcjc2l0ZVNlbGVjdGlvbic7XHJcbmRoLmRyb3Bkb3duKGRyb3Bkb3duSWQpO1xyXG5cclxuc2VsZWN0KGRyb3Bkb3duSWQpLm9uKFwiY2hhbmdlXCIsICgpID0+IHtcclxuICBjdXJ2ZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaW5pdFRpbWUnKSwgY3VydmVJbmZvKTtcclxufSk7XHJcblxyXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRhYmxlXCIpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIGlmIChjaGVja0FjdGl2ZSgndGFibGUnKSA9PT0gdHJ1ZSkgcmV0dXJuO1xyXG4gIHNldEFjdGl2ZShcInRhYmxlXCIsICdEYXlzSW5jZXB0aW9uJyk7XHJcbiAgdGFibGUocHJvZERhdGEpO1xyXG59KTtcclxuXHJcbi8vc3RvcmUgY3VycmVudGx5IHZpc2libGUgcGxvdHMgaW4gc2Vzc2lvbnN0b3JhZ2UgdG8gYWNjZXNzIGluIHJlbGF5b3V0IGV2ZW50OyBpbml0IHRvIG9ubHkgb2lsKHBhZ2UgbG9hZClcclxubGV0IGN1cnJWaXNpYmxlID0ge1widmlzaWJsZVwiOltcIk9pbCBbTUJPXVwiXX07XHJcbnNlc3Npb25TdG9yYWdlLnNldEl0ZW0oXCJ2aXNpYmxlX3RyYWNlc1wiLEpTT04uc3RyaW5naWZ5KGN1cnJWaXNpYmxlKSk7XHJcblxyXG4vL2luaXQgcGFnZSBvbiBsb2FkLy9cclxud2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcclxuICBsZXQgYWN0aXZlVGltZSA9ICdEYXlzSW5jZXB0aW9uJztcclxuICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2luaXRUaW1lJykgPT0gMzEpIGFjdGl2ZVRpbWUgPSAnRGF5czMwJztcclxuICBzZXRBY3RpdmVUaW1lKGFjdGl2ZVRpbWUpO1xyXG4gIHNldEFjdGl2ZVZpZXcobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2luaXRTY2FsZScpKTtcclxuICBjdXJ2ZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaW5pdFRpbWUnKSwgY3VydmVJbmZvKTtcclxufSgpO1xyXG5cclxuXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/curves.js\n");

/***/ }),

/***/ "./src/js/layout.js":
/*!**************************!*\
  !*** ./src/js/layout.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   layoutWbd: () => (/* binding */ layoutWbd),\n/* harmony export */   makeLayout: () => (/* binding */ makeLayout),\n/* harmony export */   makeTrace: () => (/* binding */ makeTrace)\n/* harmony export */ });\nconst makeTrace = (x, y, name, type, color, dash, text, visible) => ({\r\n    x,\r\n    y,\r\n    text,\r\n    name,\r\n    visible,\r\n    type: type || \"line\",\r\n    line: {\r\n        color,\r\n        dash,\r\n    },\r\n});\r\n\r\nconst makeLayout = (title, type, tickvals) => ({\r\n    title,\r\n    yaxis: {\r\n        type: type || \"linear\",\r\n        rangemode: \"tozero\",\r\n        autorange: true,\r\n        tickformat: \"f\",\r\n        tickvals,\r\n        gridcolor: \"#dbdbdb\",\r\n    },\r\n    xaxis: {\r\n        gridcolor: \"#dbdbdb\",\r\n    },\r\n});\r\n\r\nconst config = {\r\n    modeBarButtonsToRemove: [\r\n        \"sendDataToCloud\",\r\n        \"autoScale2d\",\r\n        \"hoverClosestCartesian\",\r\n        \"hoverCompareCartesian\",\r\n        \"lasso2d\",\r\n        \"zoomIn2d\",\r\n        \"zoomOut2d\",\r\n        \"toggleSpikelines\",\r\n    ],\r\n    displaylogo: false,\r\n    responsive: true,\r\n};\r\n\r\nconst layoutWbd = (max,min,minTVD,wellName) => ({\r\n    width: 1620,\r\n    height: 700,\r\n\r\n    margin: {\r\n        l: 0,\r\n        r: 0,\r\n        b: 0,\r\n        t: 0,\r\n    },\r\n\r\n    title: {\r\n        text: \"Drilling for \" + wellName + \", Dimmit County, TX\",\r\n        y: 0.98,\r\n    },\r\n\r\n    legend: {\r\n        x: 0.8,\r\n        y: 0.8,\r\n    },\r\n    scene: {\r\n        aspectmode: \"cube\",\r\n        xaxis: {\r\n            title: \"Easting\",\r\n            nticks: 8,\r\n            range: [max, min],\r\n            gridcolor: \"#8a8a8a\",\r\n            tickcolor: \"#050505\",\r\n            backgroundcolor: \"#ededed\",\r\n            showbackground: true,\r\n        },\r\n        yaxis: {\r\n            title: \"Northing\",\r\n            nticks: 8,\r\n            range: [max, min],\r\n            gridcolor: \"#8a8a8a\",\r\n            tickcolor: \"#050505\",\r\n            backgroundcolor: \"#f0f1f2\",\r\n            showbackground: true,\r\n\r\n        },\r\n        zaxis: {\r\n            title: \"TVD\",\r\n            nticks: 5,\r\n            range: [minTVD, -3000],\r\n            gridcolor: \"#8a8a8a\",\r\n            tickcolor: \"#050505\",\r\n            backgroundcolor: \"#ededed\",\r\n            showbackground: true,\r\n        },\r\n    },\r\n    \r\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbGF5b3V0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBQ0Q7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBQ0Q7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2QtMS8uL3NyYy9qcy9sYXlvdXQuanM/NmZlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgbWFrZVRyYWNlID0gKHgsIHksIG5hbWUsIHR5cGUsIGNvbG9yLCBkYXNoLCB0ZXh0LCB2aXNpYmxlKSA9PiAoe1xyXG4gICAgeCxcclxuICAgIHksXHJcbiAgICB0ZXh0LFxyXG4gICAgbmFtZSxcclxuICAgIHZpc2libGUsXHJcbiAgICB0eXBlOiB0eXBlIHx8IFwibGluZVwiLFxyXG4gICAgbGluZToge1xyXG4gICAgICAgIGNvbG9yLFxyXG4gICAgICAgIGRhc2gsXHJcbiAgICB9LFxyXG59KTtcclxuXHJcbmV4cG9ydCBjb25zdCBtYWtlTGF5b3V0ID0gKHRpdGxlLCB0eXBlLCB0aWNrdmFscykgPT4gKHtcclxuICAgIHRpdGxlLFxyXG4gICAgeWF4aXM6IHtcclxuICAgICAgICB0eXBlOiB0eXBlIHx8IFwibGluZWFyXCIsXHJcbiAgICAgICAgcmFuZ2Vtb2RlOiBcInRvemVyb1wiLFxyXG4gICAgICAgIGF1dG9yYW5nZTogdHJ1ZSxcclxuICAgICAgICB0aWNrZm9ybWF0OiBcImZcIixcclxuICAgICAgICB0aWNrdmFscyxcclxuICAgICAgICBncmlkY29sb3I6IFwiI2RiZGJkYlwiLFxyXG4gICAgfSxcclxuICAgIHhheGlzOiB7XHJcbiAgICAgICAgZ3JpZGNvbG9yOiBcIiNkYmRiZGJcIixcclxuICAgIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICAgIG1vZGVCYXJCdXR0b25zVG9SZW1vdmU6IFtcclxuICAgICAgICBcInNlbmREYXRhVG9DbG91ZFwiLFxyXG4gICAgICAgIFwiYXV0b1NjYWxlMmRcIixcclxuICAgICAgICBcImhvdmVyQ2xvc2VzdENhcnRlc2lhblwiLFxyXG4gICAgICAgIFwiaG92ZXJDb21wYXJlQ2FydGVzaWFuXCIsXHJcbiAgICAgICAgXCJsYXNzbzJkXCIsXHJcbiAgICAgICAgXCJ6b29tSW4yZFwiLFxyXG4gICAgICAgIFwiem9vbU91dDJkXCIsXHJcbiAgICAgICAgXCJ0b2dnbGVTcGlrZWxpbmVzXCIsXHJcbiAgICBdLFxyXG4gICAgZGlzcGxheWxvZ286IGZhbHNlLFxyXG4gICAgcmVzcG9uc2l2ZTogdHJ1ZSxcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBsYXlvdXRXYmQgPSAobWF4LG1pbixtaW5UVkQsd2VsbE5hbWUpID0+ICh7XHJcbiAgICB3aWR0aDogMTYyMCxcclxuICAgIGhlaWdodDogNzAwLFxyXG5cclxuICAgIG1hcmdpbjoge1xyXG4gICAgICAgIGw6IDAsXHJcbiAgICAgICAgcjogMCxcclxuICAgICAgICBiOiAwLFxyXG4gICAgICAgIHQ6IDAsXHJcbiAgICB9LFxyXG5cclxuICAgIHRpdGxlOiB7XHJcbiAgICAgICAgdGV4dDogXCJEcmlsbGluZyBmb3IgXCIgKyB3ZWxsTmFtZSArIFwiLCBEaW1taXQgQ291bnR5LCBUWFwiLFxyXG4gICAgICAgIHk6IDAuOTgsXHJcbiAgICB9LFxyXG5cclxuICAgIGxlZ2VuZDoge1xyXG4gICAgICAgIHg6IDAuOCxcclxuICAgICAgICB5OiAwLjgsXHJcbiAgICB9LFxyXG4gICAgc2NlbmU6IHtcclxuICAgICAgICBhc3BlY3Rtb2RlOiBcImN1YmVcIixcclxuICAgICAgICB4YXhpczoge1xyXG4gICAgICAgICAgICB0aXRsZTogXCJFYXN0aW5nXCIsXHJcbiAgICAgICAgICAgIG50aWNrczogOCxcclxuICAgICAgICAgICAgcmFuZ2U6IFttYXgsIG1pbl0sXHJcbiAgICAgICAgICAgIGdyaWRjb2xvcjogXCIjOGE4YThhXCIsXHJcbiAgICAgICAgICAgIHRpY2tjb2xvcjogXCIjMDUwNTA1XCIsXHJcbiAgICAgICAgICAgIGJhY2tncm91bmRjb2xvcjogXCIjZWRlZGVkXCIsXHJcbiAgICAgICAgICAgIHNob3diYWNrZ3JvdW5kOiB0cnVlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgeWF4aXM6IHtcclxuICAgICAgICAgICAgdGl0bGU6IFwiTm9ydGhpbmdcIixcclxuICAgICAgICAgICAgbnRpY2tzOiA4LFxyXG4gICAgICAgICAgICByYW5nZTogW21heCwgbWluXSxcclxuICAgICAgICAgICAgZ3JpZGNvbG9yOiBcIiM4YThhOGFcIixcclxuICAgICAgICAgICAgdGlja2NvbG9yOiBcIiMwNTA1MDVcIixcclxuICAgICAgICAgICAgYmFja2dyb3VuZGNvbG9yOiBcIiNmMGYxZjJcIixcclxuICAgICAgICAgICAgc2hvd2JhY2tncm91bmQ6IHRydWUsXHJcblxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgemF4aXM6IHtcclxuICAgICAgICAgICAgdGl0bGU6IFwiVFZEXCIsXHJcbiAgICAgICAgICAgIG50aWNrczogNSxcclxuICAgICAgICAgICAgcmFuZ2U6IFttaW5UVkQsIC0zMDAwXSxcclxuICAgICAgICAgICAgZ3JpZGNvbG9yOiBcIiM4YThhOGFcIixcclxuICAgICAgICAgICAgdGlja2NvbG9yOiBcIiMwNTA1MDVcIixcclxuICAgICAgICAgICAgYmFja2dyb3VuZGNvbG9yOiBcIiNlZGVkZWRcIixcclxuICAgICAgICAgICAgc2hvd2JhY2tncm91bmQ6IHRydWUsXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBcclxufSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/layout.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	(() => {
/******/ 		var webpackQueues = typeof Symbol === "function" ? Symbol("webpack queues") : "__webpack_queues__";
/******/ 		var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var webpackError = typeof Symbol === "function" ? Symbol("webpack error") : "__webpack_error__";
/******/ 		var resolveQueue = (queue) => {
/******/ 			if(queue && !queue.d) {
/******/ 				queue.d = 1;
/******/ 				queue.forEach((fn) => (fn.r--));
/******/ 				queue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));
/******/ 			}
/******/ 		}
/******/ 		var wrapDeps = (deps) => (deps.map((dep) => {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 				if(dep[webpackQueues]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					queue.d = 0;
/******/ 					dep.then((r) => {
/******/ 						obj[webpackExports] = r;
/******/ 						resolveQueue(queue);
/******/ 					}, (e) => {
/******/ 						obj[webpackError] = e;
/******/ 						resolveQueue(queue);
/******/ 					});
/******/ 					var obj = {};
/******/ 					obj[webpackQueues] = (fn) => (fn(queue));
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 			ret[webpackQueues] = x => {};
/******/ 			ret[webpackExports] = dep;
/******/ 			return ret;
/******/ 		}));
/******/ 		__webpack_require__.a = (module, body, hasAwait) => {
/******/ 			var queue;
/******/ 			hasAwait && ((queue = []).d = 1);
/******/ 			var depQueues = new Set();
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var promise = new Promise((resolve, rej) => {
/******/ 				reject = rej;
/******/ 				outerResolve = resolve;
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise["catch"](x => {}));
/******/ 			module.exports = promise;
/******/ 			body((deps) => {
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn;
/******/ 				var getResult = () => (currentDeps.map((d) => {
/******/ 					if(d[webpackError]) throw d[webpackError];
/******/ 					return d[webpackExports];
/******/ 				}))
/******/ 				var promise = new Promise((resolve) => {
/******/ 					fn = () => (resolve(getResult));
/******/ 					fn.r = 0;
/******/ 					var fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));
/******/ 					currentDeps.map((dep) => (dep[webpackQueues](fnQueue)));
/******/ 				});
/******/ 				return fn.r ? promise : getResult();
/******/ 			}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));
/******/ 			queue && (queue.d = 0);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"curves": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkprod_1"] = self["webpackChunkprod_1"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors-node_modules_firebase_app_dist_esm_index_esm_js-node_modules_firebase_auth_dist_esm_i-d0574a","vendors-node_modules_d3_src_index_js","src_js_data_js-src_js_index_js-src_js_region_js"], () => (__webpack_require__("./src/js/curves.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;